{
  "hash": "bf8b5047782c1fa64094bbcfa81c10ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modul 2 Praktikum PSD 2023/2024 Semester Ganjil\"\npage-navigation: true\nformat: html\n---\n\n\nVersi *file* `.R` dari modul ini bisa diunduh: [Modul 2 (REV).R](./Modul%202%20(REV).R)\n\n# Visualisasi Tambahan\n\n## STEM AND LEAF PLOT\n\nUntuk ngeliat persebaran data (min,max,distribusi), mirip kaya histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?stem\nView(ChickWeight) #data dari r\nstem(ChickWeight$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   2 | 599999999\n   4 | 00000111111111111111111112222222222222223333456678888888899999999999+38\n   6 | 00111111122222222333334444455555666677777888888900111111222222333334+8\n   8 | 00112223344444455555566777788999990001223333566666788888889\n  10 | 0000111122233333334566667778889901122223445555667789\n  12 | 00002223333344445555667788890113444555566788889\n  14 | 11123444455556666677788890011234444555666777777789\n  16 | 00002233334444466788990000134445555789\n  18 | 12244444555677782225677778889999\n  20 | 0123444555557900245578\n  22 | 0012357701123344556788\n  24 | 08001699\n  26 | 12344569259\n  28 | 01780145\n  30 | 355798\n  32 | 12712\n  34 | 1\n  36 | 13\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(ChickWeight$weight) #buat perbandingan\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(ChickWeight$weight) #cek nilai minimumnya\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 35\n```\n\n\n:::\n\n```{.r .cell-code}\nmax(ChickWeight$weight) #cek maxnya\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 373\n```\n\n\n:::\n:::\n\n\nKalau ternyata min sama maxnya kurang tepat, ganti scalenya\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(ChickWeight$weight, scale = 5) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   3 | 599999999\n   4 | 000001111111111111111111122222222222222233334\n   4 | 5667888888889999999999999\n   5 | 00000011111111222233333444\n   5 | 5555566667778888899999\n   6 | 001111111222222223333344444\n   6 | 555556666777778888889\n   7 | 001111112222223333344444444\n   7 | 6667778889999\n   8 | 001122233444444\n   8 | 5555556677778899999\n   9 | 0001223333\n   9 | 566666788888889\n  10 | 0000111122233333334\n  10 | 5666677788899\n  11 | 0112222344\n  11 | 5555667789\n  12 | 0000222333334444\n  12 | 555566778889\n  13 | 0113444\n  13 | 555566788889\n  14 | 111234444\n  14 | 5555666667778889\n  15 | 0011234444\n  15 | 555666777777789\n  16 | 000022333344444\n  16 | 6678899\n  17 | 000013444\n  17 | 5555789\n  18 | 12244444\n  18 | 55567778\n  19 | 222\n  19 | 5677778889999\n  20 | 0123444\n  20 | 5555579\n  21 | 0024\n  21 | 5578\n  22 | 00123\n  22 | 577\n  23 | 01123344\n  23 | 556788\n  24 | 0\n  24 | 8\n  25 | 001\n  25 | 699\n  26 | 12344\n  26 | 569\n  27 | 2\n  27 | 59\n  28 | 01\n  28 | 78\n  29 | 014\n  29 | 5\n  30 | 3\n  30 | 5579\n  31 | \n  31 | 8\n  32 | 12\n  32 | 7\n  33 | 12\n  33 | \n  34 | 1\n  34 | \n  35 | \n  35 | \n  36 | 1\n  36 | \n  37 | 3\n```\n\n\n:::\n\n```{.r .cell-code}\nstem(ChickWeight$weight, width = 100) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   2 | 599999999\n   4 | 0000011111111111111111111222222222222222333345667888888889999999999999000000111111112222+18\n   6 | 0011111112222222233333444445555566667777788888890011111122222233333444444446667778889999\n   8 | 00112223344444455555566777788999990001223333566666788888889\n  10 | 0000111122233333334566667778889901122223445555667789\n  12 | 00002223333344445555667788890113444555566788889\n  14 | 11123444455556666677788890011234444555666777777789\n  16 | 00002233334444466788990000134445555789\n  18 | 12244444555677782225677778889999\n  20 | 0123444555557900245578\n  22 | 0012357701123344556788\n  24 | 08001699\n  26 | 12344569259\n  28 | 01780145\n  30 | 355798\n  32 | 12712\n  34 | 1\n  36 | 13\n```\n\n\n:::\n:::\n\n\n## DOT DIAGRAM\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?dotchart\nView(mtcars)\n```\n:::\n\n\nPaling Sederhana\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndotchart(mtcars$mpg)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nTambah Judul dan Label\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndotchart(mtcars$mpg, labels = row.names(mtcars),\n         cex = 0.9, xlab = \"mpg\",\n         main = \"Persebaran Jarak Yang Dapat Ditempuh Per Galon\")\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nBerdasarkan Grup\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrps <- as.factor(mtcars$cyl)\nmy_cols <- c(\"blue\", \"darkgreen\", \"orange\")\ndotchart(mtcars$mpg, labels = row.names(mtcars),\n         groups = grps, gcolor = my_cols,\n         color = my_cols[grps],\n         cex = 0.9,  pch = 22, xlab = \"mpg\",\n         main = \"Persebaran Jarak Yang Dapat Ditempuh Per Galon Berdasarkan Jumlah Silinder\")\nlegend(\"bottomright\", legend = c(\"4\",\"6\", \"6\"),\n       fill = my_cols, cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# Distribusi Diskirt\n\nplot pdf, cdf, dan data yang dibangkitkan dari distribusi tersebut\n\nDistribusi Diskrit: domainnya (dalam hal ini ruang sampel) hanya bisa diskrit\n\n`pdf -> Pr(X=x)`\n\n`cdf -> Pr(X <= k)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"Rlab\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRlab 4.0 attached.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Rlab'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    dexp, dgamma, dweibull, pexp, pgamma, pweibull, qexp, qgamma,\n    qweibull, rexp, rgamma, rweibull\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:datasets':\n\n    precip\n```\n\n\n:::\n:::\n\n\n## Bernoulli\n\n### PDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbern(0, prob = 0.3) #0 adalah domain, atau bisa dikatakan akan dihitung f(0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7\n```\n\n\n:::\n\n```{.r .cell-code}\n#parameter prob adalah probabilitas sukses atau f(1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndbern(1, prob = 0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6\n```\n\n\n:::\n:::\n\n\nplot pdf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- seq(0, 1, by = 1)\nplot(dbern(x, prob = 0.6))\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nvisualisasi masih jelek,\n\nimprove plotnya coba (terutama perhatiin sumbu x nya) -> bukan domain tapi index doang\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x,\n     dbern(x, prob = 0.6),\n     main = \"PDF Distribusi Bernoulli dengan p = 0.6\",\n     xlab = \"x\",\n     ylab = \"f(x)\",\n     ylim = c(0, 1),\n     pch = 20,\n     cex = 2)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x,\n     dbern(x, prob = 0.6),\n     main = \"PDF Distribusi Bernoulli dengan p = 0.6\",\n     xlab = \"x\",\n     ylab = \"f(x)\",\n     ylim = c(0, 1),\n     pch = 20,\n     cex = 2,\n     type = \"o\")\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nhindari plot seperti ini dalam distribusi diskrit, kenapa?\n\nbalik lagi, domainnya diskrit jadi harusnya ga terdefinisi untuk 0 < x < 1 sehingga harusnya tidak boleh dihubungkan oleh garis lurus\n\nkalo pake garis putus2 masih oke lah, tapi kurang recommend untuk distribusi diskrit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x,\n     dbern(x, prob = 0.6),\n     main = \"PDF Distribusi Bernoulli dengan p = 0.4\",\n     xlab = \"x\",\n     ylab = \"f(x)\",\n     ylim = c(0, 1),\n     pch = 20,\n     cex = 2,\n     type = \"o\", \n     lty = 2)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx2 <- seq(0, 10, by = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x2,\n     dbern(x2, prob = 0.6),\n     pch = 20,\n     cex = 2,\n     xaxp = c(0,10,10))\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\napa kesimpulannya? untuk x = 2,3,4,... f(x) = 0\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbern(0, prob = 0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4\n```\n\n\n:::\n\n```{.r .cell-code}\npbern(1, prob = 0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(x2,\n     pbern(x2, prob = 0.6),\n     pch = 20,\n     cex = 2,\n     xaxp = c(0,10,10))\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\napa kesimpulannya? untuk `x = 1,2,3,... F(x) = 1 else F(x) = 1-p`\n\n### Random\n\nbangkitkan n data dari distribusi bernoulli\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_bern <- rbern(n, prob = 0.6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(random_bern)/sum(table(random_bern))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nrandom_bern\n   0    1 \n0.42 0.58 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_bern_plot <- barplot(table(random_bern),\n                            ylim = c(0,100))\ntext(x = random_bern_plot,\n     y = table(random_bern),\n     labels = table(random_bern),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n## Distribusi Binomial\n\n### PDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbinom(2,\n       size = 10,\n       prob = 0.6) #artinya adalah Pr(X=2) dimana X ~ binom(10, 0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01061683\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x2,\n     dbinom(x2,10,0.4),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 0.3)) #plot pdf\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbinom(2, size = 10, prob = 0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01229455\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x2,\n     pbinom(x2,10,0.4),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### Random\n\nbangkitkan n data dari distribusi binomial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_binom <- rbinom(n, size = 10, prob = 0.6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(random_binom)/sum(table(random_binom))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nrandom_binom\n   3    4    5    6    7    8    9   10 \n0.05 0.14 0.17 0.27 0.21 0.08 0.06 0.02 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_binom_plot <- barplot(table(random_binom),\n                             ylim = c(0,40))\ntext(x = random_binom_plot,\n     y = table(random_binom),\n     labels = table(random_binom),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Distribusi lain\n\nuntuk distribusi lain, intinya tetap sama hanya sesuaikan parameternya saja\n\nformat:\n\n- pdf -> d+nama distribusi()\n\n    misal pdf poisson berarti `dpois()`\n\n- cdf poisson: `ppois()`\n\n- data random dari distribusi poisson `rpois()`\n\nselengkapnya bisa cek di dokumentasi \n\n\n::: {.cell}\n\n```{.r .cell-code}\n?Distributions\n```\n:::",
    "supporting": [
      "modul2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}