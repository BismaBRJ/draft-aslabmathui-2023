{
  "hash": "95a6271662dfdf77aaf9a4aa9f9ed67e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Pertemuan 4 : Data Visualization (seaborn)'\nimage: static\\images\\seaborn.png\ndescription: Data visualization in python using seaborn\ndate: 04/30/2024\npage-navigation: true\nformat: html\n---\n\nKembali ke [EDA](./eda2024genap.qmd)\n\n# Seaborn\n\n<div style='text-align: justify;'>\nSeaborn adalah library visualisasi data yang dibangun di atas **matplotlib**, dan menggunakan struktur data yang ada pada library **pandas**. Seaborn banyak digunakan karena penggunaannya yang cukup *simple* dibandingkan dengan matplotlib.pyplot dengan hasil visualisasi yang lebih beragam.\n\nbaca dokumentasi seaborn di sini : [Seaborn](https://seaborn.pydata.org/tutorial/introduction.html)\n</div>\n___\n\n::: {#dceaf450 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#load dataset yang disediakan oleh modul atau library seaborn\niris = sns.load_dataset('iris')\niris\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>145</th>\n      <td>6.7</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.3</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>146</th>\n      <td>6.3</td>\n      <td>2.5</td>\n      <td>5.0</td>\n      <td>1.9</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>147</th>\n      <td>6.5</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.0</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>6.2</td>\n      <td>3.4</td>\n      <td>5.4</td>\n      <td>2.3</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>149</th>\n      <td>5.9</td>\n      <td>3.0</td>\n      <td>5.1</td>\n      <td>1.8</td>\n      <td>virginica</td>\n    </tr>\n  </tbody>\n</table>\n<p>150 rows Ã— 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n<div style='text-align: justify;'>\nBerikut salah satu contoh visualisasi dari data iris yang dihasilkan oleh seaborn.\n</div>\n\n::: {#8c05900c .cell execution_count=2}\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-3-output-1.png){width=633 height=411}\n:::\n:::\n\n\n___\n\n# Inputs\n\n<div style='text-align: justify;'>\nSeaborn memiliki 3 cara untuk menginput data sebagai parameter (sumbu y dan/atau sumbu x) dari fungsi-fungsi visualisasinya.\n\n1. List/Series/Array\n2. Pandas Dataframe dan kolom\n3. Langsung masuk ke dataframenya untuk diolah\n\n</div>\n\n## List/Series/Array\n\n::: {#b86ca486 .cell execution_count=3}\n``` {.python .cell-code}\n#Mengambil isinya saja dari kolom sepal length dan sepal width\nlength = iris['sepal_length'].values\nwidth = iris['sepal_width'].values\nprint(length, width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[5.1 4.9 4.7 4.6 5.  5.4 4.6 5.  4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 5.1\n 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.  5.  5.2 5.2 4.7 4.8 5.4 5.2 5.5 4.9 5.\n 5.5 4.9 4.4 5.1 5.  4.5 4.4 5.  5.1 4.8 5.1 4.6 5.3 5.  7.  6.4 6.9 5.5\n 6.5 5.7 6.3 4.9 6.6 5.2 5.  5.9 6.  6.1 5.6 6.7 5.6 5.8 6.2 5.6 5.9 6.1\n 6.3 6.1 6.4 6.6 6.8 6.7 6.  5.7 5.5 5.5 5.8 6.  5.4 6.  6.7 6.3 5.6 5.5\n 5.5 6.1 5.8 5.  5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8 7.1 6.3 6.5 7.6 4.9 7.3\n 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7 6.  6.9 5.6 7.7 6.3 6.7 7.2\n 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7 6.3 6.4 6.  6.9 6.7 6.9 5.8 6.8\n 6.7 6.7 6.3 6.5 6.2 5.9] [3.5 3.  3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 3.7 3.4 3.  3.  4.  4.4 3.9 3.5\n 3.8 3.8 3.4 3.7 3.6 3.3 3.4 3.  3.4 3.5 3.4 3.2 3.1 3.4 4.1 4.2 3.1 3.2\n 3.5 3.6 3.  3.4 3.5 2.3 3.2 3.5 3.8 3.  3.8 3.2 3.7 3.3 3.2 3.2 3.1 2.3\n 2.8 2.8 3.3 2.4 2.9 2.7 2.  3.  2.2 2.9 2.9 3.1 3.  2.7 2.2 2.5 3.2 2.8\n 2.5 2.8 2.9 3.  2.8 3.  2.9 2.6 2.4 2.4 2.7 2.7 3.  3.4 3.1 2.3 3.  2.5\n 2.6 3.  2.6 2.3 2.7 3.  2.9 2.9 2.5 2.8 3.3 2.7 3.  2.9 3.  3.  2.5 2.9\n 2.5 3.6 3.2 2.7 3.  2.5 2.8 3.2 3.  3.8 2.6 2.2 3.2 2.8 2.8 2.7 3.3 3.2\n 2.8 3.  2.8 3.  2.8 3.8 2.8 2.8 2.6 3.  3.4 3.1 3.  3.1 3.1 3.1 2.7 3.2\n 3.3 3.  2.5 3.  3.4 3. ]\n```\n:::\n:::\n\n\n::: {#ff92c799 .cell execution_count=4}\n``` {.python .cell-code}\nsns.scatterplot(x=length, y=width)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-5-output-1.png){width=571 height=413}\n:::\n:::\n\n\n## Dataframe dan kolomnya\n\n::: {#9eed7699 .cell execution_count=5}\n``` {.python .cell-code}\nsns.scatterplot(x=iris['sepal_length'], y=iris['sepal_width'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-6-output-1.png){width=589 height=432}\n:::\n:::\n\n\natau\n\n::: {#82f670c4 .cell execution_count=6}\n``` {.python .cell-code}\nsns.scatterplot(x='sepal_length', y='sepal_width', data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-7-output-1.png){width=589 height=432}\n:::\n:::\n\n\n## Olah dataframe\n\n::: {#c65d8d90 .cell execution_count=7}\n``` {.python .cell-code}\nsns.boxplot(data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-8-output-1.png){width=558 height=411}\n:::\n:::\n\n\n# Plots\n\n<div style='text-align: justify;'>\nSeaborn memiliki banyak sekali jenis plot dengan fungsi yang berbeda-beda. 5 diantaranya yang akan dibahas pada pertemuan ini :\n\n1. Distribution Plot\n2. Count Plot\n3. Heatmap\n4. Scatter Plot\n5. Box Plot\n\nuntuk plot lainnya, silakan telusuri dokumentasi seaborn berikut :\n\n[Seaborn Plots](https://seaborn.pydata.org/examples/index.html)\n</div>\n\n## Distribution Plot\n\n::: {#24d247ff .cell execution_count=8}\n``` {.python .cell-code}\nsns.displot(iris['petal_length'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-9-output-1.png){width=470 height=470}\n:::\n:::\n\n\n::: {#17bc3a69 .cell execution_count=9}\n``` {.python .cell-code}\niris['petal_length'].skew()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n-0.27488417975101276\n```\n:::\n:::\n\n\n::: {#89db96c1 .cell execution_count=10}\n``` {.python .cell-code}\nsns.displot(iris['sepal_width'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-11-output-1.png){width=470 height=470}\n:::\n:::\n\n\n::: {#04d7d474 .cell execution_count=11}\n``` {.python .cell-code}\niris['sepal_width'].skew()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n0.31896566471359966\n```\n:::\n:::\n\n\n::: {#ba1f2c81 .cell execution_count=12}\n``` {.python .cell-code}\nsns.histplot(iris['sepal_length'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-13-output-1.png){width=585 height=429}\n:::\n:::\n\n\n::: {#6b5f5aa1 .cell execution_count=13}\n``` {.python .cell-code}\nsns.histplot(iris['sepal_width'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-14-output-1.png){width=591 height=429}\n:::\n:::\n\n\n::: {#62a3aa8c .cell execution_count=14}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.histplot(iris['sepal_width'], cumulative=True)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-15-output-1.png){width=600 height=429}\n:::\n:::\n\n\n## Count Plot\n\n::: {#84a86a23 .cell execution_count=15}\n``` {.python .cell-code}\n#tips dari seaborn\ntips=sns.load_dataset('tips')\ntips\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>239</th>\n      <td>29.03</td>\n      <td>5.92</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sat</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>240</th>\n      <td>27.18</td>\n      <td>2.00</td>\n      <td>Female</td>\n      <td>Yes</td>\n      <td>Sat</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>241</th>\n      <td>22.67</td>\n      <td>2.00</td>\n      <td>Male</td>\n      <td>Yes</td>\n      <td>Sat</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>242</th>\n      <td>17.82</td>\n      <td>1.75</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sat</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>243</th>\n      <td>18.78</td>\n      <td>3.00</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Thur</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n<p>244 rows Ã— 7 columns</p>\n</div>\n```\n:::\n:::\n\n\n___\n\n::: {#75de84f5 .cell execution_count=16}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.countplot(x='day', data=tips)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-17-output-1.png){width=585 height=429}\n:::\n:::\n\n\n::: {#fda09baf .cell execution_count=17}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.countplot(x=tips['day'])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-18-output-1.png){width=585 height=429}\n:::\n:::\n\n\n::: {#1b9f0d86 .cell execution_count=18}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.countplot(x='sex', data=tips, palette='Accent', hue='sex')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-19-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {#7358e16f .cell execution_count=19}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.countplot(x='day', data=tips, palette='Blues', hue='sex')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-20-output-1.png){width=585 height=429}\n:::\n:::\n\n\n::: {#31467d7d .cell execution_count=20}\n``` {.python .cell-code}\n# Histogram kumulatif dari sepal width\nsns.countplot(x='sex', data=tips, palette='Blues', hue='day')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-21-output-1.png){width=585 height=429}\n:::\n:::\n\n\n::: {#642ae126 .cell execution_count=21}\n``` {.python .cell-code}\n#Jika ingin mengammbar dalam sumbu vertikal ya y=\nsns.countplot(y='day', data=tips, palette='Blues', hue='sex')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-22-output-1.png){width=598 height=429}\n:::\n:::\n\n\n::: {#efde3b03 .cell execution_count=22}\n``` {.python .cell-code}\nsns.countplot(x='sex', data=tips, hue='smoker')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-23-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {#5b6ac065 .cell execution_count=23}\n``` {.python .cell-code}\nsns.countplot(x='smoker', data=tips, hue='sex')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-24-output-1.png){width=593 height=429}\n:::\n:::\n\n\n## Heatmap\n\n::: {#b9ce0bf7 .cell execution_count=24}\n``` {.python .cell-code}\niris.drop('species', axis=1, inplace=True)\niris\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>145</th>\n      <td>6.7</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.3</td>\n    </tr>\n    <tr>\n      <th>146</th>\n      <td>6.3</td>\n      <td>2.5</td>\n      <td>5.0</td>\n      <td>1.9</td>\n    </tr>\n    <tr>\n      <th>147</th>\n      <td>6.5</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>6.2</td>\n      <td>3.4</td>\n      <td>5.4</td>\n      <td>2.3</td>\n    </tr>\n    <tr>\n      <th>149</th>\n      <td>5.9</td>\n      <td>3.0</td>\n      <td>5.1</td>\n      <td>1.8</td>\n    </tr>\n  </tbody>\n</table>\n<p>150 rows Ã— 4 columns</p>\n</div>\n```\n:::\n:::\n\n\n___\n\n::: {#65cd114f .cell execution_count=25}\n``` {.python .cell-code}\nkorelasi_iris = iris.corr()\nkorelasi_iris\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>sepal_length</th>\n      <td>1.000000</td>\n      <td>-0.117570</td>\n      <td>0.871754</td>\n      <td>0.817941</td>\n    </tr>\n    <tr>\n      <th>sepal_width</th>\n      <td>-0.117570</td>\n      <td>1.000000</td>\n      <td>-0.428440</td>\n      <td>-0.366126</td>\n    </tr>\n    <tr>\n      <th>petal_length</th>\n      <td>0.871754</td>\n      <td>-0.428440</td>\n      <td>1.000000</td>\n      <td>0.962865</td>\n    </tr>\n    <tr>\n      <th>petal_width</th>\n      <td>0.817941</td>\n      <td>-0.366126</td>\n      <td>0.962865</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#1d544f50 .cell execution_count=26}\n``` {.python .cell-code}\nsns.heatmap(iris.corr())\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-27-output-1.png){width=544 height=416}\n:::\n:::\n\n\n::: {#643764b5 .cell execution_count=27}\n``` {.python .cell-code}\nsns.heatmap(iris.corr(), cmap='YlGnBu')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-28-output-1.png){width=544 height=416}\n:::\n:::\n\n\n::: {#d8340281 .cell execution_count=28}\n``` {.python .cell-code}\nsns.heatmap(iris.corr(), cmap='YlGnBu')\n\nplt.xticks(rotation=45)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-29-output-1.png){width=544 height=472}\n:::\n:::\n\n\n::: {#6de3acd7 .cell execution_count=29}\n``` {.python .cell-code}\nsns.heatmap(iris.corr(), cmap='YlGnBu')\n\nplt.yticks(rotation=45)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-30-output-1.png){width=600 height=416}\n:::\n:::\n\n\n::: {#15139fa3 .cell execution_count=30}\n``` {.python .cell-code}\nsns.heatmap(iris.corr(), cmap='YlGnBu')\n\nplt.xticks(rotation=45)\n\nplt.yticks(rotation=45)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-31-output-1.png){width=600 height=472}\n:::\n:::\n\n\n::: {#df4a12dc .cell execution_count=31}\n``` {.python .cell-code}\nsns.heatmap(korelasi_iris[(korelasi_iris >= 0.5)])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-32-output-1.png){width=550 height=416}\n:::\n:::\n\n\n::: {#ca54b84c .cell execution_count=32}\n``` {.python .cell-code}\nsns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)])\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-33-output-1.png){width=544 height=416}\n:::\n:::\n\n\n::: {#35d3ef77 .cell execution_count=33}\n``` {.python .cell-code}\nsns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)], annot = True)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-34-output-1.png){width=544 height=416}\n:::\n:::\n\n\n::: {#6b5ea55d .cell execution_count=34}\n``` {.python .cell-code}\nsns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)], annot = True, cmap='Blues')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-35-output-1.png){width=544 height=416}\n:::\n:::\n\n\n::: {#6f91b0cb .cell execution_count=35}\n``` {.python .cell-code}\nsns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2) ], annot = True, cmap = 'Blues', linewidth = 1, linecolor = 'black')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-36-output-1.png){width=544 height=416}\n:::\n:::\n\n\n## Scatter Plot\n\n::: {#6037a7d9 .cell execution_count=36}\n``` {.python .cell-code}\niris = sns.load_dataset('iris')\niris\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>145</th>\n      <td>6.7</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.3</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>146</th>\n      <td>6.3</td>\n      <td>2.5</td>\n      <td>5.0</td>\n      <td>1.9</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>147</th>\n      <td>6.5</td>\n      <td>3.0</td>\n      <td>5.2</td>\n      <td>2.0</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>6.2</td>\n      <td>3.4</td>\n      <td>5.4</td>\n      <td>2.3</td>\n      <td>virginica</td>\n    </tr>\n    <tr>\n      <th>149</th>\n      <td>5.9</td>\n      <td>3.0</td>\n      <td>5.1</td>\n      <td>1.8</td>\n      <td>virginica</td>\n    </tr>\n  </tbody>\n</table>\n<p>150 rows Ã— 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n___\n\n::: {#14ea8174 .cell execution_count=37}\n``` {.python .cell-code}\nsns.scatterplot(x='sepal_length', y='sepal_width', data=iris, palette='Accent_r', hue='species')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-38-output-1.png){width=589 height=432}\n:::\n:::\n\n\n::: {#513c7e92 .cell execution_count=38}\n``` {.python .cell-code}\nsns.regplot(x='sepal_length', y='sepal_width', data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-39-output-1.png){width=589 height=432}\n:::\n:::\n\n\n::: {#b23cc57a .cell execution_count=39}\n``` {.python .cell-code}\nsns.regplot(x='petal_length', y='petal_width', data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-40-output-1.png){width=589 height=429}\n:::\n:::\n\n\n::: {#ed0454af .cell execution_count=40}\n``` {.python .cell-code}\niris['petal_length'].corr(iris['petal_width'])\n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n```\n0.9628654314027963\n```\n:::\n:::\n\n\n## Box Plot\n\n::: {#850a4edb .cell execution_count=41}\n``` {.python .cell-code}\nsns.boxplot(x='petal_length', data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-42-output-1.png){width=545 height=429}\n:::\n:::\n\n\n::: {#b8ca60fa .cell execution_count=42}\n``` {.python .cell-code}\nsns.boxplot(x='sepal_width', data=iris)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](modul4_files/figure-html/cell-43-output-1.png){width=551 height=429}\n:::\n:::\n\n\n::: {#c46335cb .cell execution_count=43}\n``` {.python .cell-code}\n?sns.countplot\n```\n:::\n\n\n",
    "supporting": [
      "modul4_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}