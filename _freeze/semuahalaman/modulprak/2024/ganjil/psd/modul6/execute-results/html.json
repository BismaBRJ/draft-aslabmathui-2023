{
  "hash": "601a6a432f79526a9d8238aa7f1e1ed0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"(Pertemuan 06) Distribusi Kontinu di R, Distribusi di Excel\"\nsubtitle: \"Continuous Distributions in R, Distributions in Excel\"\ndescription: \"Offline di Departemen Matematika\"\ndate: 10/28/2024\npage-navigation: true\nformat: html\n---\n\n\nKembali ke [Pengantar Sains Data](./psd2024.qmd)\n\nMelanjutkan dari pertemuan sebelumnya tentang distribusi diskirt di R, pada pertemuan kali ini, kita akan membahas tentang beberapa distribusi kontinu di R, tepatnya distribusi *uniform* (kontinu) dan distribusi normal, baik dengan *base R* ataupun dengan `distr`. Kemudian, kita juga akan membahas tentang distribusi probabilitas di Excel, baik diskrit maupun kontinu, terutama cara menghasilkan data *random* menggunakan Analysis ToolPak.\n\n# Distribusi Kontinu dengan *base R*\n\nSebenarnya ada banyak distribusi kontinu. Namun, sesuai dengan batasan materi kuliah Pengantar Sains Data, kita hanya akan membahas dua distribusi kontinu, yaitu\n\n- distribusi *uniform* (kontinu), dan\n\n- distribusi normal.\n\nKalian akan mempelajari lebih banyak distribusi, baik distribusi diskrit maupun distribusi kontinu, serta berbagai macam \"penggabungannya\", di mata kuliah Statistika Matematika 1.\n\nSeperti biasa, kita masih bermain dengan fungsi `d`..., `p`,..., `q`..., dan `r`... yang bisa kita ingat kembali:\n\n- `d`... melambangkan PDF\n\n- `p`... melambangkan CDF\n\n- `q`... melambangkan *inverse CDF* atau fungsi kuantil *(quantile function)*\n\n- `r`... melambangkan RNG *(random number generator)*\n\n## Distribusi Normal\n\nSesuai namanya, distribusi normal sering dijumpai di kehidupan sehari-hari; tidak jarang terjadi, persebaran berbagai data, yang awalnya terkesan acak, ternyata mendekati distribusi normal. \n\nDistribusi normal memiliki dua parameter, yaitu\n\n- **rata-rata atau *mean*** $\\mu$ (mu)\n\n- **variansi atau *variance*** $\\sigma^2$ (sigma kecil, dikuadratkan), yang harus taknegatif *(nonnegative)*\n\n    Catatan: sigma besar adalah $\\Sigma$ yang biasa kita gunakan untuk notasi penjumlahan atau sumasi.\n\nPerhatikan bahwa rata-rata termasuk ukuran pemusatan data, sedangkan variansi termasuk ukuran persebaran data (juga disebut keragaman data). Nilai kedua parameter tersebut bisa diubah-ubah sesuai keperluan. Dengan demikian, distribusi normal bisa cukup fleksibel menyesuaikan dengan berbagai macam data.\n\nApabila suatu variabel acak $X$ mengikuti distribusi normal, biasa ditulis\n\n$$X \\sim N(\\mu, \\sigma^2)$$\n\nNamun, daripada berdasarkan rata-rata dan variansi, terkadang suatu distribusi normal ditentukan berdasarkan rata-rata dan **simpangan baku *(standard deviation)***, biasa disingkat `sd`, `std`, `stdev`, atau `stddev`, dan biasa dilambangkan $\\sigma$, yang merupakan akar dari variansi. Di R, *standard deviation* biasa dilambangkan `sd`.\n\nPerbedaan antara variansi dan *standard deviation* hanyalah masalah kuadrat. Berhati-hati saja.\n\nSelain itu, perlu diingat bahwa penulisan\n\n$$X \\sim N(\\mu, \\sigma^2)$$\n\nselalu menggunakan variansi yaitu $\\sigma^2$, daripada *standard deviation*.\n\n*Support* dari distribusi normal adalah keseluruhan garis bilangan real *(the real line)*, yaitu interval buka $(-\\infty, \\infty)$\n\n### PDF\n\nUntuk $-\\infty < x < \\infty$, PDF dari distribusi normal bisa ditulis\n\n$$n(x; \\mu, \\sigma) = \\frac{1}{\\sigma\\sqrt{2\\pi}}e^{-\\frac{1}{2}\\frac{(x-\\mu)^2}{\\sigma^2}}$$\n\nPerhatikan, ada konstanta $\\pi$ (pi) dan konstanta Euler $e$. Kedua konstanta tersebut tersedia di R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.141593\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexp(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.718282\n```\n\n\n:::\n:::\n\n\nSebenarnya, `exp` adalah fungsi eksponensial $e^x$.\n\n**Distribusi normal standar *(standard normal distribution)*** adalah distribusi normal istimewa, yang memiliki parameter $\\mu = 0$ dan parameter $\\sigma = 1$, atau bisa dilambangkan $N(0,1)$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(1.3,\n      mean = 0,\n      sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1713686\n```\n\n\n:::\n:::\n\n\nUntuk *plotting*, kita tidak perlu menggunakan keseluruhan *support* (mustahil juga), karena untuk nilai-nilai yang tidak dekat dengan nilai tengah atau rata-rata, probabilitasnya hampir nol. Oleh karena itu, kita cukup memilih interval yang memuat titik-titik yang dekat dengan rata-rata, misal $0 \\pm 4$, tidak perlu terlalu besar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_norm_1 <- seq(0-4, 0+4, length = 100)\nx_norm_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] -4.00000000 -3.91919192 -3.83838384 -3.75757576 -3.67676768 -3.59595960\n  [7] -3.51515152 -3.43434343 -3.35353535 -3.27272727 -3.19191919 -3.11111111\n [13] -3.03030303 -2.94949495 -2.86868687 -2.78787879 -2.70707071 -2.62626263\n [19] -2.54545455 -2.46464646 -2.38383838 -2.30303030 -2.22222222 -2.14141414\n [25] -2.06060606 -1.97979798 -1.89898990 -1.81818182 -1.73737374 -1.65656566\n [31] -1.57575758 -1.49494949 -1.41414141 -1.33333333 -1.25252525 -1.17171717\n [37] -1.09090909 -1.01010101 -0.92929293 -0.84848485 -0.76767677 -0.68686869\n [43] -0.60606061 -0.52525253 -0.44444444 -0.36363636 -0.28282828 -0.20202020\n [49] -0.12121212 -0.04040404  0.04040404  0.12121212  0.20202020  0.28282828\n [55]  0.36363636  0.44444444  0.52525253  0.60606061  0.68686869  0.76767677\n [61]  0.84848485  0.92929293  1.01010101  1.09090909  1.17171717  1.25252525\n [67]  1.33333333  1.41414141  1.49494949  1.57575758  1.65656566  1.73737374\n [73]  1.81818182  1.89898990  1.97979798  2.06060606  2.14141414  2.22222222\n [79]  2.30303030  2.38383838  2.46464646  2.54545455  2.62626263  2.70707071\n [85]  2.78787879  2.86868687  2.94949495  3.03030303  3.11111111  3.19191919\n [91]  3.27272727  3.35353535  3.43434343  3.51515152  3.59595960  3.67676768\n [97]  3.75757576  3.83838384  3.91919192  4.00000000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x_norm_1,\n     dnorm(x_norm_1, mean = 0, sd = 1),\n     type = 'o')\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nContoh distribusi normal yang lain: $N(2,5)$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(2.7,\n      mean = 2,\n      sd = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07901035\n```\n\n\n:::\n:::\n\n\nTernyata, nilai untuk distribusi normal dengan parameter lain bisa diperoleh dari distribusi normal standar, memanfaatkan yang namanya ***Z-score***.\n\n$$Z = \\frac{X-\\mu}{\\sigma}$$\n\nNamun, ketika menghitung PDF dan sudah memperoleh hasil dari distribusi normal standar, kita perlu membagi lagi hasilnya dengan *standard deviation* yang aslinya, karena ada masalah *scaling* (skala).\n\nMisalnya, untuk $X=2.7$ dan $X \\sim N(2,5)$,\n\n$$Z = \\frac{X-2}{5} = \\frac{2.7-2}{5}$$\n\nNamun, daripada sekadar menghitung\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm((2.7-2)/(5),\n      mean = 0,\n      sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3950517\n```\n\n\n:::\n:::\n\n\nkita harus membagi lagi dengan *standard deviation* yang aslinya yaitu 5, sebagai berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm((2.7-2)/(5),\n      mean = 0,\n      sd = 1)/5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07901035\n```\n\n\n:::\n:::\n\n\nBandingkan:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(2.7,\n      mean = 2,\n      sd = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07901035\n```\n\n\n:::\n:::\n\n\nSama, ya!\n\nUntuk membuat *plot* dari $N(2,5)$, kita buat titik-titik `x_norm_2` sedemikian sehingga nilai-nilainya berada di sekitar rata-rata 2, tetapi dengan interval yang lebih luas, misal $2 \\pm 20$, karena *standard deviation* yang lebih besar dibandingkan dengan membuat *plot* $N(0,1)$ tadi.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_norm_2 <- seq(2-20, 2+20, length = 100)\nx_norm_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] -18.0000000 -17.5959596 -17.1919192 -16.7878788 -16.3838384 -15.9797980\n  [7] -15.5757576 -15.1717172 -14.7676768 -14.3636364 -13.9595960 -13.5555556\n [13] -13.1515152 -12.7474747 -12.3434343 -11.9393939 -11.5353535 -11.1313131\n [19] -10.7272727 -10.3232323  -9.9191919  -9.5151515  -9.1111111  -8.7070707\n [25]  -8.3030303  -7.8989899  -7.4949495  -7.0909091  -6.6868687  -6.2828283\n [31]  -5.8787879  -5.4747475  -5.0707071  -4.6666667  -4.2626263  -3.8585859\n [37]  -3.4545455  -3.0505051  -2.6464646  -2.2424242  -1.8383838  -1.4343434\n [43]  -1.0303030  -0.6262626  -0.2222222   0.1818182   0.5858586   0.9898990\n [49]   1.3939394   1.7979798   2.2020202   2.6060606   3.0101010   3.4141414\n [55]   3.8181818   4.2222222   4.6262626   5.0303030   5.4343434   5.8383838\n [61]   6.2424242   6.6464646   7.0505051   7.4545455   7.8585859   8.2626263\n [67]   8.6666667   9.0707071   9.4747475   9.8787879  10.2828283  10.6868687\n [73]  11.0909091  11.4949495  11.8989899  12.3030303  12.7070707  13.1111111\n [79]  13.5151515  13.9191919  14.3232323  14.7272727  15.1313131  15.5353535\n [85]  15.9393939  16.3434343  16.7474747  17.1515152  17.5555556  17.9595960\n [91]  18.3636364  18.7676768  19.1717172  19.5757576  19.9797980  20.3838384\n [97]  20.7878788  21.1919192  21.5959596  22.0000000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x_norm_2,\n     dnorm(x_norm_2, mean = 2, sd = 5),\n     type = 'o')\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Untuk distribusi kontinu, perhitungan probabilitas harus melalui CDF, sedangkan PDF hanya menggambarkan bentuk distribusi.**\n\nTidak seperti distribusi diskrit, **PDF distribusi kontinu di $\\mathbf{x}$ TIDAK SAMA DENGAN $\\mathbf{\\text{Pr}(X=x)}$.** Bahkan, di distribusi kontinu, untuk tiap $x$ selalu berlaku\n\n$$\\text{Pr}(X=x) = 0$$\n\nMengapa demikian? Misalnya, untuk distribusi normal, kita ingin menghitung $\\text{Pr}(X=2.7)$. Artinya, kita meminta probabilitas bahwa nilai yang kita peroleh adalah tepat 2.7, **tidak boleh meleset sedikitpun**. Kalau kita memperoleh misalnya 2.7000000001, itu sudah dianggap angka yang berbeda. Tentunya, memperoleh persis suatu angka tertentu sangat tidak realistis, sehingga probabilitasnya adalah nol.\n\nDengan demikian, untuk distribusi kontinu, probabilitas di tepat satu titik, di titik apapun, itu selalu nol.\n\nKalau begitu, apakah probabilitas bahwa kita dapat nilai apapun sama sekali itu adalah nol, sehingga tidak ada yang mungkin? Tidak juga. Mungkin terdengar aneh. Namun, sebenarnya, untuk distribusi kontinu, **daripada menghitung probabilitas memperoleh tepat suatu nilai tertentu, kita biasa menghitung probabilitas memperoleh nilai di interval tertentu.** Dengan begitu, barulah probabilitasnya taknol.\n\nSebagaimana di distribusi diskrit, kita bisa menghitung probabilitas untuk rentang atau interval tertentu menggunakan CDF. Oleh karena itulah, perhitungan probabilitas untuk distribusi kontinu selalu menggunakan CDF, tidak pernah menggunakan PDF.\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(1.96,\n      mean = 0,\n      sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9750021\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x_norm_1,\n     pnorm(x_norm_1, mean = 0, sd = 1),\n     type = 'o')\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nContoh:\n\nMisalkan $X$ merupakan variabel acak yang berdistribusi normal dengan $\\mu = 50$ dan ~~variansi~~ *standard deviation* $\\sigma = 10$. Hitunglah\n\n$$\\text{Pr}(45 < X < 62)$$\n\nJawab:\n\nPerhatikan bahwa\n\n$$\\begin{align*}\n    \\text{Pr}&(45 < X < 62) \\\\\n               &= \\text{Pr}(X < 62) - \\text{Pr}(X \\leq 45) \\\\\n               &= \\text{Pr}(X \\leq 62) - \\text{Pr}(X \\leq 45)\n\\end{align*}$$\n\nkarena\n\n$$\\begin{align*}\n\\text{Pr}&(X < 62) \\\\\n          &= \\text{Pr}(X \\leq 62) - \\text{Pr}(X = 62) \\\\\n          &= \\text{Pr}(X \\leq 62) - 0 \\\\\n          &= \\text{Pr}(X \\leq 62)\n\\end{align*}$$\n\nSehingga, $\\text{Pr}(45 < X < 62)$ bisa dihitung dengan\n\n$$\\text{Pr}(X \\leq 62) - \\text{Pr}(X \\leq 45)$$\n\nyaitu selisih dua nilai CDF:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(62, mean = 50, sd = 10) -\n  pnorm(45, mean = 50, sd = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5763928\n```\n\n\n:::\n:::\n\n\nKesimpulannya,\n\n$$\\text{Pr}(45 < X < 62) \\approx 0.5763928$$\n\nCara lain, kita bisa juga memanfaatkan *Z-score*. Misalkan\n\n$$Z = \\frac{X-\\mu}{\\sigma} = \\frac{X-50}{10}$$\n\nMaka\n\n$$\\begin{align*}\n    \\text{Pr}&(45 < X < 62) \\\\\n    &= \\text{Pr}\\left(\\frac{45-50}{10} < \\frac{X-50}{10} < \\frac{62-50}{10}\\right) \\\\\n    &= \\text{Pr}\\left(\\frac{45-50}{10} < Z < \\frac{62-50}{10}\\right) \\\\\n    &= \\text{Pr}\\left(Z \\leq \\frac{62-50}{10}\\right) - \\text{Pr}\\left(Z \\leq \\frac{45-50}{10}\\right)\n\\end{align*}$$\n\nSehingga kita tinggal menghitung:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm((62-50)/10, mean = 0, sd = 1) -\n  pnorm((45-50)/10, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5763928\n```\n\n\n:::\n:::\n\n\nDaripada langsung mengetik sepanjang itu, kita juga bisa menghitung dulu\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(62-50)/10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.2\n```\n\n\n:::\n\n```{.r .cell-code}\n(45-50)/10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.5\n```\n\n\n:::\n:::\n\n\nbaru memasukkan,\n\n$$\\begin{align*}\n    \\text{Pr}&(45 < X < 62) \\\\\n    &= \\text{Pr}\\left(Z \\leq \\frac{62-50}{10}\\right) - \\text{Pr}\\left(Z \\leq \\frac{45-50}{10}\\right) \\\\\n    &= \\text{Pr}\\left(Z \\leq 1.2\\right) - \\text{Pr}\\left(Z \\leq -0.5\\right)\n\\end{align*}$$\n\nsehingga bisa dihitung\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(1.2, mean = 0, sd = 1) -\n  pnorm(-0.5, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5763928\n```\n\n\n:::\n:::\n\n\nApabila sewaktu-waktu kalian perlu menghitung ini tetapi tidak bisa mengakses R, kalian bisa memanfaatkan **tabel normal standar *(standard normal table)***, yaitu tabel yang mendata **berbagai nilai CDF untuk distribusi normal standar** yaitu $N(0,1)$, dan kebetulan juga disebut tabel *Z-score*. Carilah nilai CDF untuk $Z=1.2$ dan nilai CDF untuk $Z=-0.5$, lalu hitung selisihnya.\n\nApabila menggunakan `mean = 0` dan `sd = 1`, kalian juga bisa saja menganggap fungsi `pnorm` sebagai fungsi untuk memperoleh nilai pada tabel normal standar. Misalnya, nilai di $Z=1.2$ adalah\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(1.2, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8849303\n```\n\n\n:::\n:::\n\n\ndan nilai di $Z=-0.5$ adalah\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(-0.5, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3085375\n```\n\n\n:::\n:::\n\n\nSilakan bandingkan dengan tabel normal standar, yang misalnya bisa kalian temukan di lampiran buku pengantar statistik seperti karangan Walpole.\n\n### *Quantile function*\n\nMisalkan diketahui $X \\sim N(0,1)$ dan\n\n$$\\text{Pr}(X \\leq x) = 0.975$$\n\nBagaimana cara menentukan $x$?\n\nPerhatikan bahwa, fungsi probabilitas seperti di atas melambangkan CDF, dan kita ingin mencari nilai $x$ yang membuat nilai CDF menjadi 0.975. Caranya, kita bisa menggunakan *inverse CDF* atau *quantile function*, sebagai berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(0.975,\n      mean = 0,\n      sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.959964\n```\n\n\n:::\n:::\n\n\nTernyata, nilai $x$ yang diinginkan sekitar 1.96.\n\nKalau ragu, kita bisa periksa dengan menghitung nilai CDF untuk $x=1.96$\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(1.96,\n      mean = 0,\n      sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9750021\n```\n\n\n:::\n:::\n\n\nBenar ya!\n\n### RNG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(62)\nn <- 100\nrandom_normal_1 <- rnorm(n, mean = 0, sd = 1)\nrandom_normal_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1]  0.801270126  0.284456708 -1.512796984  0.074637826  2.260744864\n  [6]  0.061994083  0.913783028 -1.201950117  0.096915709 -0.986658430\n [11] -0.945597948  1.066644680  0.320424359 -1.547620322 -0.973418633\n [16] -0.044839783  1.100497403  0.643893414  1.158084038 -0.104914360\n [21] -1.392449727  1.018245804  0.826401081  1.289595050 -0.643231482\n [26] -0.001173311 -1.948468606  0.680949495  0.274233523 -1.905682922\n [31] -1.207395634  0.379645715 -0.832700980 -1.480467865  1.045205002\n [36]  1.203374466  1.143497941 -0.798450844  0.713542224  0.014509402\n [41]  1.065312134 -0.162379461 -0.733018312  0.283498988 -0.193434842\n [46]  1.548665726  0.277543508 -0.769101533  1.571636889  1.300682395\n [51]  0.049887057 -0.417278907  0.188247814  1.011823237  0.819801179\n [56]  0.526496313 -1.473395423 -0.686042765 -0.374751726  1.149207414\n [61]  0.309402632 -1.248579103  0.082461577  3.079093309 -1.043472726\n [66]  2.608787079 -0.223155112  0.277967984  1.341954354 -1.037490047\n [71] -0.382641299  1.068881533 -1.840465410 -0.557030007  0.566990033\n [76]  2.232051009 -0.309609288  1.386739199 -0.428271844 -0.655081698\n [81] -0.323856515 -0.071806893 -0.604127858 -0.117262945 -0.356753720\n [86]  1.342047477 -0.626166768  0.374192123 -0.370055470 -0.361204965\n [91]  0.773178206 -1.322378159  2.213237411  1.095148834 -0.155491552\n [96]  1.086000546 -0.446262004  0.399248471 -0.553159488 -0.596143996\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(random_normal_1),\n     main = \"normal, mean 0, sd 1\")\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_normal_2 <- rnorm(n, mean = 10, sd = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(random_normal_2),\n     main = \"normal, mean 10, sd 8\")\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### (Pengayaan) Menghampiri distribusi binomial dengan distribusi normal\n\n*(work in progress)*\n\n## Distribusi *Uniform* (Kontinu)\n\n### PDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndunif(40, min = 25, max = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01333333\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx_unif <- seq(25-5, 100+5, length = 100)\nx_unif\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1]  20.00000  20.85859  21.71717  22.57576  23.43434  24.29293  25.15152\n  [8]  26.01010  26.86869  27.72727  28.58586  29.44444  30.30303  31.16162\n [15]  32.02020  32.87879  33.73737  34.59596  35.45455  36.31313  37.17172\n [22]  38.03030  38.88889  39.74747  40.60606  41.46465  42.32323  43.18182\n [29]  44.04040  44.89899  45.75758  46.61616  47.47475  48.33333  49.19192\n [36]  50.05051  50.90909  51.76768  52.62626  53.48485  54.34343  55.20202\n [43]  56.06061  56.91919  57.77778  58.63636  59.49495  60.35354  61.21212\n [50]  62.07071  62.92929  63.78788  64.64646  65.50505  66.36364  67.22222\n [57]  68.08081  68.93939  69.79798  70.65657  71.51515  72.37374  73.23232\n [64]  74.09091  74.94949  75.80808  76.66667  77.52525  78.38384  79.24242\n [71]  80.10101  80.95960  81.81818  82.67677  83.53535  84.39394  85.25253\n [78]  86.11111  86.96970  87.82828  88.68687  89.54545  90.40404  91.26263\n [85]  92.12121  92.97980  93.83838  94.69697  95.55556  96.41414  97.27273\n [92]  98.13131  98.98990  99.84848 100.70707 101.56566 102.42424 103.28283\n [99] 104.14141 105.00000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x_unif,\n     dunif(x_unif, min = 25, max = 100),\n     type = 'o')\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npunif(40, min = 25, max = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2\n```\n\n\n:::\n:::\n\n\n### *Quantile function*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqunif(0.2, min = 25, max = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40\n```\n\n\n:::\n:::\n\n\n### RNG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(61)\nn <- 100\nrandom_unif <- runif(n, min = 25, max = 100)\nrandom_unif\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 51.38044 95.68630 51.53925 26.21991 28.19639 36.83788 72.77575 30.67809\n  [9] 31.23775 46.52553 56.89787 44.77957 81.93752 61.58409 77.22397 54.71256\n [17] 93.64523 33.87767 53.17014 54.33197 32.54365 71.72351 30.59663 30.58296\n [25] 76.50455 48.77611 98.08175 82.62318 32.50079 53.21110 29.46335 96.73125\n [33] 73.20886 96.58120 84.05388 84.01955 79.59918 32.49794 38.80875 26.82491\n [41] 66.49560 72.81532 53.80198 63.55768 46.82261 99.53555 87.37795 60.85538\n [49] 68.29078 77.70675 85.03716 48.30345 77.51278 87.68632 47.08067 28.48127\n [57] 49.79398 78.86069 85.10363 30.93439 92.00908 28.60879 31.95021 56.56616\n [65] 70.26537 28.23183 31.97654 78.35911 95.84966 77.07542 41.33189 85.83743\n [73] 97.56560 49.74292 67.42995 87.99055 86.79161 77.93522 36.00223 65.13676\n [81] 48.01646 64.25653 27.53163 68.86392 80.26409 41.29605 67.82670 70.48360\n [89] 91.09336 44.66384 63.81147 63.47403 74.94217 89.52828 41.98855 47.05847\n [97] 51.67670 93.11556 79.55292 78.58793\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(random_unif),\n     main = \"uniform, min 25, max 100\")\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n# Distribusi Kontinu dengan `distr`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(distr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: startupmsg\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUtilities for Start-Up Messages (version 0.9.7)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"startupmsg\", NEWS(\"startupmsg\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: sfsmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nObject Oriented Implementation of Distributions (version 2.9.2)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAttention: Arithmetics on distribution objects are understood as operations on corresponding random variables (r.v.s); see distrARITH().\nSome functions from package 'stats' are intentionally masked ---see distrMASK().\nNote that global options are controlled by distroptions() ---c.f. ?\"distroptions\".\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"distr\", NEWS(\"distr\"), as well as\n  http://distr.r-forge.r-project.org/\nPackage \"distrDoc\" provides a vignette to this package as well as to several extension packages; try vignette(\"distr\").\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'distr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    df, qqplot, sd\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(distrEx)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nExtensions of Package 'distr' (version 2.9.0)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNote: Packages \"e1071\", \"moments\", \"fBasics\" should be attached /before/ package \"distrEx\". See distrExMASK().Note: Extreme value distribution functionality has been moved to\n      package \"RobExtremes\". See distrExMOVED().\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"distrEx\", NEWS(\"distrEx\"), as well as\n  http://distr.r-forge.r-project.org/\nPackage \"distrDoc\" provides a vignette to this package as well as to several related packages; try vignette(\"distr\").\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'distrEx'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, median, var\n```\n\n\n:::\n:::\n\n\n## Distribusi Uniform (Kontinu)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist1 <- Unif(Min = 25, Max = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dist1)\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nE(dist1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 62.5\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(dist1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 468.75\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd(dist1)(40)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01333333\n```\n\n\n:::\n\n```{.r .cell-code}\np(dist1)(40)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist1)(0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40\n```\n\n\n:::\n:::\n\n\n## Distribusi Normal\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist2 <- Norm(mean = 0, sd = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dist2)\n```\n\n::: {.cell-output-display}\n![](modul6_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nE(dist2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(dist2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd(dist2)(1.96)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05844094\n```\n\n\n:::\n\n```{.r .cell-code}\np(dist2)(1.96)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9750021\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist2)(0.975)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.959964\n```\n\n\n:::\n:::\n\n\n# Distribusi di Excel\n\nSilakan unduh *worksheet* berikut untuk bermain di Excel dengan berbagai distribusi, baik diskrit maupun kontinu, yang telah kita bahas, terutama untuk bermain dengan *random number generation*.\n\n*Worksheet* versi terbaru: [Worksheet Pertemuan 6 (Revisi)](./worksheet_pertemuan6_rev.xlsx)\n\n*Worksheet* versi sebelumnya:\n\n- [Worksheet Pertemuan 6](./worksheet_pertemuan6.xlsx)\n\nKita akan memanfaatkan yang namanya \"Analysis ToolPak\", juga disebut \"XLMiner Analysis ToolPak\". Cara mengaktifkannya tergantung versi Excel, juga tergantung apakah sedang menggunakan Microsoft Excel di *desktop* atau mengakses secara *online*.\n\n## Mengaktifkan Analysis ToolPak: Microsoft 365 Excel (Web)\n\nJika kalian menggunakan Excel di versi web Microsoft 365, kalian bisa mencari tombol Add-ins di sisi kanan atas layar kalian (lihat gambar)\n\n![](./static/toolpak_365_01.png)\n\nSelanjutnya, kalian bisa ketik \"XLMiner Analysis Toolpak\" pada search bar\n\n![](./static/toolpak_365_02.png)\n\nAkan muncul list \"Anova: Single Factor\", \"Anova: Two Factor\" dan lainnya. Langsung saja scroll hingga ditemukan Random Number Generation.\n\nLalu, ikuti petunjuk yang diberikan di *file*\n\n![](./static/toolpak_365_03.png)\n\n## Mengaktifkan Analysis ToolPak: Excel 2021\n\n*(work in progress)*\n",
    "supporting": [
      "modul6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}