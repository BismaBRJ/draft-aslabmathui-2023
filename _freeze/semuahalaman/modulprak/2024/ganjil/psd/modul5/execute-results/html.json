{
  "hash": "c3ee8ed4eddb020ee83c3d5604703800",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"(Pertemuan 05) R: Distribusi Probabilitas Diskrit\"\nsubtitle: \"R: Discrete Probability Distributions\"\ndescription: \"Offline di Departemen Matematika\"\ndate: 10/21/2024\npage-navigation: true\nformat: html\n---\n\n\nKembali ke [Pengantar Sains Data](./psd2024.qmd)\n\nSelamat datang kembali di praktikum Pengantar Sains Data. Setelah sebelumnya membahas tentang serba-serbi visualisasi data, sekarang kita akan mulai membahas sejumlah bentuk distribusi probabilitas yang umum dikenal dan digunakan di dunia statistika, dimulai dari sejumlah distribusi diskrit.\n\nDalam suatu percobaan acak, tentu ada sejumlah hasil yang mungkin. Kita bisa memandang hasil-hasil yang mungkin tersebut sebagai nilai-nilai yang bisa dimiliki oleh suatu **variabel acek *(random variable)***, biasanya dilambangkan $X$. Himpunan semua nilai yang mungkin disebut **ruang sampel *(sample space)*** untuk variabel acak tersebut.\n\n**Distribusi probabilitas *(probability distribution)*** untuk suatu variabel acak mendata probabilitas atau peluang untuk tiap nilai di ruang sampel.\n\nSuatu ruang sampel disebut **diskrit** apabila banyaknya elemen bersifat **terhitung *(countable)***. Suatu distribusi disebut **diskrit** apabila variabel acak yang bersangkutan memiliki ruang sampel yang diskrit.\n\nSerupa: suatu ruang sampel disebut **kontinu** apabila banyaknya elemen bersifat **tak terhitung *(uncountable)***, dan suatu distribusi disebut **kontinu** apabila variabel acak yang bersangkutan memiliki ruang sampel yang kontinu.\n\nBanyak distribusi data cenderung mengikuti \"jenis\" atau \"bentuk\" yang sama, hanya berbeda dari segi beberapa \"sifat\" saja. Dari situlah muncul berbagai nama distribusi seperti binomial, *uniform*, Poisson, normal, dan seterusnya; itulah sejumlah \"bentuk\" distribusi yang umum dikenal, dan ada konsep \"parameter\" sebagai \"sifat-sifat\" yang bisa membedakan antar dua distribusi yang berbentuk mirip.\n\nBeberapa distribusi diskrit adalah\n\n- distribusi Bernoulli\n\n- distribusi binomial\n\n- distribusi *uniform* diskrit\n\n- distribusi Poisson\n\n# Distribusi Diskrit dengan *base R*\n\n## Fungsi `d`..., `p`..., `q`..., dan `r`...\n\nDi kalangan R, sudah ada semacam standardisasi agar tiap distribusi (baik diskrit maupun kontinu) diwakili oleh empat fungsi, yang namanya berawalan `d`, berawalan `p`, berawalan `q`, dan berawalan `r`.\n\n- Fungsi berawalan `d` melambangkan ***density function***, juga disebut PMF *(probability mass function)* untuk distribusi diskrit, atau PDF *(probability density function)* untuk distribusi kontinu\n\n    Fungsi ini menghitung probabilitas suatu variabel acak $X$ memperoleh nilai **sama dengan** $x$, yang bisa dirumuskan:\n\n    $$\\text{Pr}\\left\\{ X=x \\right\\}$$\n\n- Fungsi berawalan `p` melambangkan ***(cumulative) probability function*** atau lebih umum disebut **CDF *(cumulative distribution function)***\n\n    Fungsi ini menghitung probabilitas suatu variabel acak $X$ memperoleh nilai **kurang dari atau sama dengan** $x$, yang bisa dirumuskan:\n\n    $$\\text{Pr}\\left\\{ X \\leq x \\right\\}$$\n\n- Fungsi berawalan `q` melambangkan ***quantile function*** atau lebih umum disebut ***inverse CDF***\n\n    Diketahui suatu probabilitas $y$, fungsi ini menentukan nilai $x$ yang membuat nilai CDF dari $x$ sama dengan $y$.\n\n- Fungsi berawalan `r` melambangkan **RNG *(random number generator)***, yang bisa menghasilkan sampel sejumlah data secara acak *(random)* dari distribusinya.\n\nUntuk sejumlah distribusi yang umum dikenal, *base R* sudah menyediakan keempat fungsi tersebut. Kita akan lebih mengenal arti, maksud, dan cara menggunakan fungsi-fungsi tersebut seiring mengenal berbagai distribusi.\n\n## Distribusi Bernoulli\n\nKhusus untuk distribusi Bernoulli, diperlukan *package* `Rlab`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Rlab)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRlab 4.0 attached.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Rlab'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    dexp, dgamma, dweibull, pexp, pgamma, pweibull, qexp, qgamma,\n    qweibull, rexp, rgamma, rweibull\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:datasets':\n\n    precip\n```\n\n\n:::\n:::\n\n\n### PMF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbern(0, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7\n```\n\n\n:::\n\n```{.r .cell-code}\ndbern(1, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsupport_bern <- c(0, 1)\nplot(dbern(support_bern, prob = 0.3))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_bern,\n     dbern(support_bern, prob = 0.3),\n     main = \"PMF Distribusi Bernoulli dengan p = 0.3\",\n     xlab = \"x\",\n     ylab = \"f(x)\",\n     ylim = c(0, 1),\n     pch = 20,\n     cex = 2)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbern(0, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7\n```\n\n\n:::\n\n```{.r .cell-code}\npbern(1, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_bern,\n     pbern(support_bern, prob = 0.3),\n     pch = 20,\n     cex = 2,\n     xaxp = c(0,10,10))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### *Quantile function*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqbern(0.5, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nqbern(0.6, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nqbern(0.7, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nqbern(0.8, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nqbern(0.9, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nqbern(1, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n### RNG\n\nBangkitkan n data dari distribusi Bernoulli\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_bern <- rbern(n, prob = 0.6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(random_bern)/sum(table(random_bern))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nrandom_bern\n   0    1 \n0.42 0.58 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_bern_plot <- barplot(table(random_bern),\n                            ylim = c(0,100))\ntext(x = random_bern_plot,\n     y = table(random_bern),\n     labels = table(random_bern),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Distribusi Binomial\n\n### PMF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbinom(2,\n       size = 10,\n       prob = 0.3) #artinya adalah Pr(X=2) dengan X ~ binom(10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2334744\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsupport_binom <- seq(0, 1, by = 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_binom,\n     dbinom(support_binom, 10, 0.3),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbinom(2, size = 10, prob = 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3827828\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_binom,\n     pbinom(support_binom, 10, 0.3),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### *Quantile function*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqbinom(0.5, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\nqbinom(0.6, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\nqbinom(0.7, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\nqbinom(0.8, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\nqbinom(0.9, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nqbinom(1, 10, 0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n:::\n\n\n### RNG\n\nBangkitkan n data dari distribusi Binomial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_binom <- rbinom(n, size = 10, prob = 0.3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_binom_plot <- barplot(table(random_binom),\n                             ylim = c(0,40))\ntext(x = random_binom_plot,\n     y = table(random_binom),\n     labels = table(random_binom),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Contoh distribusi binomial\n\nSuatu ujian yang terdiri dari 15 pertanyaan pilihan berganda, masing-masing memiliki 5 kemungkinan jawaban dan hanya satu yang benar. Hitunglah berapa probabilitas seseorang yang menjawab secara menebak-nebak akan memperoleh\n\na. 5 sampai 10 jawaban yang benar\n\nb. Antara 5 sampai 10 jawaban yang benar\n\nc. 4 jawaban yang benar\n\nd. Lebih dari 5 jawaban yang benar\n\nJawab\n\nVariabel acak $X$ menyatakan banyaknya jawaban yang benar.\n\nPerhatikan bahwa $X$ berdistribusi binomial dengan $n=15$ dan $p=\\frac{1}{5}=0.2$\n\na. 5 sampai 10 jawaban yang benar\n\nArtinya $\\text{Pr}(5 \\leq X \\leq 10)$\n\nPerhatikan bahwa\n\n$$\\text{Pr}(5 \\leq X \\leq 10) = \\text{Pr}(X \\leq 10) - \\text{Pr}(X \\leq 4)$$\n\nSehingga kita tinggal menghitung nilai CDF di 10 dan di 4, lalu menghitung selisihnya.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbinom(10, size = 15, prob = 0.2) - pbinom(4, size = 15, prob = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1642213\n```\n\n\n:::\n:::\n\n\nb. Antara 5 sampai 10 jawaban yang benar\n\nArtinya $\\text{Pr}(5 < X < 10)$\n\nPerhatikan bahwa\n\n$$\\text{Pr}(5 < X < 10) = \\text{Pr}(X \\leq 9) - \\text{Pr}(X \\leq 5)$$\n\nSehingga kita tinggal menghitung nilai CDF di 9 dan di 5, lalu menghitung selisihnya.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbinom(9, size = 15, prob = 0.2) - pbinom(5, size = 15, prob = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0609382\n```\n\n\n:::\n:::\n\n\nc. 4 jawaban yang benar\n\nArtinya $\\text{Pr}(X=4)$\n\nTinggal hitung PMF di 4\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbinom(4, size = 15, prob = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1876042\n```\n\n\n:::\n:::\n\n\nd. Lebih dari 5 jawaban yang benar\n\nArtinya $\\text{Pr}(X>5)$\n\nPerhatikan bahwa\n\n$$\\text{Pr}(X>5) = 1 - \\text{Pr}(X \\leq 5)$$\n\nSehingga kita tinggal menghitung\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - pbinom(5, size = 15, prob = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.06105143\n```\n\n\n:::\n:::\n\n\n## Distribusi Poisson\n\n### PMF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndpois(1, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2706706\n```\n\n\n:::\n\n```{.r .cell-code}\ndpois(2, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2706706\n```\n\n\n:::\n\n```{.r .cell-code}\ndpois(3, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.180447\n```\n\n\n:::\n\n```{.r .cell-code}\ndpois(4, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.09022352\n```\n\n\n:::\n\n```{.r .cell-code}\ndpois(5, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.03608941\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsupport_pois <- seq(0, 10, by = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_pois,\n     dpois(support_pois, lambda = 2),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### CDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nppois(1, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4060058\n```\n\n\n:::\n\n```{.r .cell-code}\nppois(2, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6766764\n```\n\n\n:::\n\n```{.r .cell-code}\nppois(3, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8571235\n```\n\n\n:::\n\n```{.r .cell-code}\nppois(4, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.947347\n```\n\n\n:::\n\n```{.r .cell-code}\nppois(5, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9834364\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(support_pois,\n     ppois(support_pois, lambda = 2),\n     xaxp = c(0,10,10),\n     pch = 20,\n     ylim = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### *Quantile function*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqpois(1, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Inf\n```\n\n\n:::\n\n```{.r .cell-code}\nqpois(2, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in qpois(2, lambda = 2): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NaN\n```\n\n\n:::\n\n```{.r .cell-code}\nqpois(3, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in qpois(3, lambda = 2): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NaN\n```\n\n\n:::\n\n```{.r .cell-code}\nqpois(4, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in qpois(4, lambda = 2): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NaN\n```\n\n\n:::\n\n```{.r .cell-code}\nqpois(5, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in qpois(5, lambda = 2): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NaN\n```\n\n\n:::\n:::\n\n\n### RNG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_pois <- rpois(n, lambda = 2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_pois_plot <- barplot(table(random_pois),\n                            ylim = c(0,40))\ntext(x = random_pois_plot,\n     y = table(random_pois),\n     labels = table(random_pois),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n# (Pengayaan) Visualisasi Distribusi Diskrit dengan ggplot2\n\n# Distribusi Diskrit dengan `distr`\n\nAda suatu *package* bernama `distr` yang menawarkan pendekatan agak berbeda daripada *base R* dalam hal distribusi. Daripada fungsi-fungsi terpisah untuk tiap kemungkinan **awalan** `d`..., `p`..., `q`..., dan `r`... sebagaimana di *base R*, kita malah bisa membuat suatu \"benda\" atau \"objek\" distribusi, yang kemudian bisa diterapkan keempat fungsi **satu huruf** berikut: `d`, `p`, `q`, dan `r`.\n\nBahkan, dengan pendekatan ini, kita bisa dengan cukup mudah membuat distribusi kita sendiri.\n\nSeperti biasa, silakan instal terlebih dahulu *package* `distr` apabila belum,\n\n```\ninstall.packages(\"distr\")\n```\n\nkemudian jangan lupa aktifkan:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"distr\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: startupmsg\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUtilities for Start-Up Messages (version 0.9.7)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"startupmsg\", NEWS(\"startupmsg\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: sfsmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nObject Oriented Implementation of Distributions (version 2.9.2)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAttention: Arithmetics on distribution objects are understood as operations on corresponding random variables (r.v.s); see distrARITH().\nSome functions from package 'stats' are intentionally masked ---see distrMASK().\nNote that global options are controlled by distroptions() ---c.f. ?\"distroptions\".\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"distr\", NEWS(\"distr\"), as well as\n  http://distr.r-forge.r-project.org/\nPackage \"distrDoc\" provides a vignette to this package as well as to several extension packages; try vignette(\"distr\").\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'distr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    df, qqplot, sd\n```\n\n\n:::\n:::\n\n\n## Membuat distribusi diskrit sendiri\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsupp1 <- c(1, 2, 3)\nprob1 <- c(0.3, 0.4, 0.3)\ndist1 <- DiscreteDistribution(supp = supp1, prob = prob1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dist1)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd(dist1)(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3\n```\n\n\n:::\n\n```{.r .cell-code}\nd(dist1)(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4\n```\n\n\n:::\n\n```{.r .cell-code}\nd(dist1)(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np(dist1)(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3\n```\n\n\n:::\n\n```{.r .cell-code}\np(dist1)(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7\n```\n\n\n:::\n\n```{.r .cell-code}\np(dist1)(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nq(dist1)(0.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist1)(0.7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist1)(0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist1)(0.9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\nq(dist1)(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_dist1 <- r(dist1)(n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_dist1_plot <- barplot(table(random_dist1),\n                             ylim = c(0,40))\ntext(x = random_dist1_plot,\n     y = table(random_dist1),\n     labels = table(random_dist1),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n## Ekspektasi dan Variansi\n\n```\ninstall.packages(\"distrEx\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"distrEx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nExtensions of Package 'distr' (version 2.9.0)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNote: Packages \"e1071\", \"moments\", \"fBasics\" should be attached /before/ package \"distrEx\". See distrExMASK().Note: Extreme value distribution functionality has been moved to\n      package \"RobExtremes\". See distrExMOVED().\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFor more information see ?\"distrEx\", NEWS(\"distrEx\"), as well as\n  http://distr.r-forge.r-project.org/\nPackage \"distrDoc\" provides a vignette to this package as well as to several related packages; try vignette(\"distr\").\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'distrEx'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, median, var\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nE(dist1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(dist1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsupp2 <- c(0, 1, 2, 3, 4)\nprob2 <- c(0.2, 0.1, 0.3, 0.3, 0.1)\ndist2 <- DiscreteDistribution(supp = supp2, prob = prob2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dist2)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nE(dist2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(dist2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.6\n```\n\n\n:::\n:::\n\n\n## Distribusi Binomial\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist3 <- Binom(size = 15, prob = 0.2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dist3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nE(dist3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(dist3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd(dist3)(9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0006717597\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np(dist3)(9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9998868\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nq(dist3)(0.7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(122)\nn <- 100\nrandom_dist3 <- r(dist3)(n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_dist3_plot <- barplot(table(random_dist3),\n                             ylim = c(0,40))\ntext(x = random_dist3_plot,\n     y = table(random_dist3),\n     labels = table(random_dist3),\n     pos = 3)\n```\n\n::: {.cell-output-display}\n![](modul5_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n## Distribusi Poisson\n\n# (Pengayaan) Distribusi Multinomial\n",
    "supporting": [
      "modul5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}