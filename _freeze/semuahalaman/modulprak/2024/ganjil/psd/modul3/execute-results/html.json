{
  "hash": "fc9148f404d977bcaa4e4d3077e0374e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R: Operasi Dasar, Statistik Deskriptif, Visualisasi Frekuensi (Pertemuan 3)\"\nsubtitle: \"R: Basic Operations, Descriptive Statistics, Frequency Visualizations\"\ndescription: \"Offline di Departemen Matematika\"\ndate: 09/30/2024\npage-navigation: true\nformat: html\n---\n\n\nKembali ke [Pengantar Sains Data](./psd2024.qmd)\n\nUntuk pertemuan kali ini, kita akan mulai membahas lebih lanjut tentang penggunaan bahasa R, melalui RStudio.\n\n*Dataset* \"Iris\" yang digunakan di modul ini bisa langsung diakses melalui R, atau bisa juga diunduh:\n\n* [Iris.csv](./Iris.csv)\n\n* [Iris.xlsx](./Iris.xlsx)\n\nMateri modul kali ini adalah revisi dari [modul PSD tahun lalu](../../../2023/ganjil/psd/Pekan%201/modul1.qmd) yang sementara bisa kalian intip, yang sedang disusun di bawah ini (belum lengkap).\n\n# Operasi Dasar\n\nSilakan buka RStudio dulu, ya! Gunakan perangkat (*laptop* atau komputer) yang sudah terinstal R dan RStudio. Kalau perlu, petunjuk instalasi ada di [modul pertemuan pertama](./modul1.qmd).\n\nSebelum mulai menggunakan R dengan RStudio, jangan lupa untuk membuat *file* baru `.R` dan disimpan. Pencet `File > New File > R Script` untuk membuat, lalu tekan `Ctrl + S` (Windows) atau `Cmd + S` (macOS) untuk menyimpan. Silakan pilih dan/atau buat *folder* untuk menyimpan *file* tersebut.\n\nJangan lupa menyimpan *file* secara berkala (juga dengan `Ctrl + S` atau `Cmd + S`) agar tidak hilang.\n\nSuatu *file* `.R` bisa terdiri dari sejumlah baris kode berbahasa R.\n\n* Tiap baris bisa dijalankan masing-masing, dengan cara menekan baris tersebut, kemudian memencet tombol `Ctrl` dan `Enter` sekaligus di *keyboard* (atau biasa ditulis `Ctrl + Enter`) untuk Windows, atau `Cmd + Enter` untuk macOS.\n\n* Apabila ingin menjalankan beberapa baris sekaligus, *select* dulu (dengan *mouse*) baris-baris yang ingin dijalankan, baru tekan `Ctrl + Enter` (Windows) atau `Cmd + Enter` (macOS).\n\n* Kalau mau (jarang digunakan), keseluruhan *file* `.R` bisa dijalankan dengan `Ctrl + Shift + Enter` (Windows) atau `Cmd + Shift + Enter` (macOS).\n\n## *Review* Aritmatika\n\nKita *review* pengenalan R dari [pertemuan pertama](./modul1.qmd) dulu, ya!\n\nKalian bisa mengetik kemudian mencoba menjalankan masing-masing baris kode berikut, untuk perhitungan dasar di R. Apabila menggunakan RStudio, hasilnya akan muncul di bagian bawah, yang disebut \"Console\". (Sebenarnya, daripada mengetik di *file*, kalian bisa saja langsung mengetik kode di Console, tetapi tidak bisa disimpan.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2+3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\n7-5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\n3*5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\n3/4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.75\n```\n\n\n:::\n\n```{.r .cell-code}\n2:4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 3 4\n```\n\n\n:::\n\n```{.r .cell-code}\n2**3 # pangkat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\nPendefinisian variabel di R bisa menggunakan `<-` (lebih umum digunakan) atau menggunakan `=` seperti berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\napel <- 4\njeruk = 7\n```\n:::\n\n\nRuas kiri merupakan nama variabel dan ruas kanan merupakan nilai variabel.\n\nUntuk memanggil (memeriksa isi) suatu variabel, cukup ketik namanya, lalu jalankan:\n\n\n::: {.cell}\n\n```{.r .cell-code}\napel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\nLebih jelasnya, bisa menggunakan fungsi `print` seperti berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(apel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\nVariabel juga bisa diterapkan operasi dasar, misalnya seperti berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\napel-jeruk\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3\n```\n\n\n:::\n\n```{.r .cell-code}\napel*jeruk\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 28\n```\n\n\n:::\n:::\n\n\nKita juga bisa mendefinisikan variabel baru menggunakan nilai dari variabel yang sudah ada:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbanyakbuah <- jeruk+apel\nbanyakbuah\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11\n```\n\n\n:::\n:::\n\n\nUntuk melihat semua variabel yang sudah ada,\n\n- di tampilan RStudio, cukup lihat bagian \"Environment\" yang harusnya ada di sebelah kanan layar. Terlihat nama tiap variabel yang sudah terdefinisi, beserta nilai masing-masing.\n\n- secara pemrograman R, bisa dengan fungsi atau perintah `ls()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nls()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"apel\"       \"banyakbuah\" \"jeruk\"     \n```\n\n\n:::\n:::\n\n\nDi R, kita juga bisa menghapus variabel, menggunakan fungsi atau perintah `rm()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(banyakbuah)\n```\n:::\n\n\nKalau kita coba panggil `banyakbuah` lagi, akan *error*.\n\nApabila ingin menghapus semua variabel, kita bisa memberikan daftar semua variabel yang ada (yaitu hasil `ls()`) ke `rm()` seperti berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\n```\n:::\n\n\n## *Vector*, *sampling*\n\nSebelumnya, kita sudah mengenal variabel yang bisa menyimpan data, seperti data numerik, juga data teks atau *string*.\n\nApabila kita ingin menuliskan sekumpulan data, di R ada konsep *vector*, yang seperti *array* di pemrograman pada umumnya. Kita bisa menggabungkan sejumlah data agar menjadi satu kesatuan dengan fungsi `c()` atau *combine*, misalnya sebagai berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nangka <- c(1, 2, 3)\nprint(angka)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnama_buah <- c(\"apel\", \"jeruk\", \"pisang\")\nprint(nama_buah)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"apel\"   \"jeruk\"  \"pisang\"\n```\n\n\n:::\n:::\n\n\nKita juga bisa melakukan *sampling*, yaitu mengambil sekian buah data secara sembarang, seperti berikut. Coba jalankan beberapa kali, hasilnya kemungkinan akan berbeda-beda, tetapi tidak mungkin hal yang sama dipilih lebih dari sekali.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample(nama_buah, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pisang\" \"jeruk\" \n```\n\n\n:::\n\n```{.r .cell-code}\nsample(nama_buah, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"jeruk\"  \"pisang\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(nama_buah, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"apel\"  \"jeruk\"\n```\n\n\n:::\n:::\n\n\n*Sampling* seperti itu disebut **tanpa pengembalian *(without replacement)***. Apabila angka 2 diganti jadi angka 4, kita memerintah R untuk mengambil 4 buah data yang tidak boleh sama dari suatu *vector* yang hanya memiliki 3 buah data, sehingga akan *error*.\n\nSebenarnya, di R, kita juga bisa melakukan *sampling* **dengan pengembalian *(with replacement)***, dengan tambahan opsi `replace = TRUE` sebagai berikut. Apabila dijalankan berkali-kali, hasilnya juga kemungkinan akan berbeda-beda, tetapi buah yang sama bisa dipilih lebih dari sekali.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample(nama_buah, 4, replace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pisang\" \"apel\"   \"apel\"   \"pisang\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(nama_buah, 4, replace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"apel\"   \"apel\"   \"apel\"   \"pisang\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(nama_buah, 4, replace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pisang\" \"pisang\" \"pisang\" \"jeruk\" \n```\n\n\n:::\n:::\n\n\nApabila kalian coba `replace = FALSE`, hasilnya akan seolah-olah kalian tidak menentukan opsi `replace` sama sekali.\n\n## *Import* data, instalasi *package*/*library*\n\nSekumpulan data biasa disebut *dataset*. Di R, ada sejumlah *dataset* yang *built-in*, yaitu \"sudah ada dari sananya\". Di antara itu, *dataset* paling terkenal adalah `iris`, yaitu data tiga spesies [bunga *Iris*](https://en.wikipedia.org/wiki/Iris_(plant)), yang sering digunakan dalam pengantar statistika (seperti mata kuliah PSD ini) ataupun pengantar *machine learning*.\n\nKita bisa mengaktifkan *dataset* `iris` tersebut dengan perinah berikut, menggunakan *string*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"iris\")\n```\n:::\n\n\nSebagaimana di Python, penulisan *string* di R juga bebas antara menggunakan tanda petik `'seperti ini'` ataupun tanda kutip `\"seperti ini\"`, yang penting konsisten.\n\nSetelah menjalankan kode di atas, *dataset* `iris` sudah diaktifkan. Untuk melihatnya,\n\n* di RStudio, lihat ke bagian Environment. Kalian bisa *double click* atau klik dua kali tulisan `iris` agar muncul *tab* baru berisi tabelnya.\n\n* secara pemrograman, kalian bisa mengetik `iris` begitu saja sebagaimana ketika ingin menampilkan variabel, seperti berikut. Kemudian, tampilan tabel untuk *dataset* `iris` akan muncul di Console (bisa di-*scroll*).\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n```\n\n\n:::\n:::\n\n\n* cara lain adalah dengan mengetik `View(iris)`, agar tampilan *dataset* `iris` muncul di *tab* baru, seolah-olah telah melakukan *double click* di Environment. Perhatikan bahwa huruf \"V\" di perintah `View` harus huruf kapital.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(iris)\n```\n:::\n\n\nTentunya, data yang dihadapi oleh pengguna R pada umumnya tidak akan *built-in*, tetapi misalnya akan berupa *file* Excel (`.xlsx`) ataupun *format* `.csv`, sehingga harus di-*import* terlebih dahulu.\n\nUntuk belajar cara *import* data, kebetulan *dataset* `iris` juga tersedia dalam *format* `.csv` dan juga `.xlsx` yang bisa kalian unduh:\n\n* [Iris.csv](./Iris.csv)\n\n* [Iris.xlsx](./Iris.xlsx)\n\n::: {.callout-note}\n## Tentang *format* CSV\nBaik *format* `.csv` maupun *format* `.xlsx` menyimpan data yang bersifat \"tabular\", atau berbentuk tabel. Bedanya, *format* `.xlsx` atau Excel bisa menyimpan hal lainnya seperti gambar grafik/visualisasi, juga tiap sel/data bisa diberi warna, dijadikan *bold*, dan sebagainya. Sedangkan, *format* CSV benar-benar hanya menyimpan data tabel saja.\n\n\"CSV\" itu sendiri adalah singkatan dari *comma-separated values*. Kalau ada waktu, kalian bisa iseng mencoba membuka *file* `.csv` menggunakan aplikasi teks seperti Notepad (di Windows) atau TextEdit (di macOS). Kalian bisa melihat tiap nilai dipisahkan dengan koma, semikolon, atau tanda serupa, yang disebut *delimeter*.\n:::\n\nKebetulan, fitur *import* di R tidak langsung aktif, sehingga perlu diaktifkan terlebih dahulu, dan bahkan perlu diinstal sebelum diaktifkan.\n\nFitur *import* `.csv`, yang bernama `read.csv`, tersedia dari *package* atau *library* (yaitu sekumpulan fitur) yang bernama \"readr\". Kode berikut menginstal *package* `readr` terlebih dahulu, kemudian mengaktifkannya:\n\n```\ninstall.packages(\"readr\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n```\n:::\n\n\nSedangkan, fitur *import* `.xlsx` bernama `read_excel` dan berasal dari *package* `readxl`, yang juga perlu diinstal dan diaktifkan sebagai berikut:\n\n```\ninstall.packages(\"readxl\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n\nAda baiknya, *file* `.csv` dan/atau *file* `.xlsx` yang ingin di-*import* diletakkan di *folder* yang sama dengan *file* `.R` yang sedang kalian gunakan. Kemudian, di tampilan RStudio bagian pojok kanan bawah, tepatnya di *tab* \"Files\", kalian bisa mencari letak *file-file* tersebut. Setelah menemukannya, kalian tinggal memberi tahu RStudio bahwa *file-file* yang ingin kalian gunakan ada di situ, yaitu dengan menekan `More > Set As Working Directory` (masih di *tab* Files).\n\nDengan demikian, untuk meng-*import* `Iris.csv`, kalian tinggal mengetik\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- read.csv(\"Iris.csv\")\n```\n:::\n\n\ndan untuk meng-*import* `Iris.xlsx`, kalian tinggal mengetik\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- read_excel(\"Iris.xlsx\")\n```\n:::\n\n\nBeberapa catatan tentang kode di atas:\n\n* Isi dari fungsi `read.csv` ataupun `read_excel`, yang saat ini diisi *string* `\"Iris.csv\"` dan `\"Iris.xlsx\"`, sebenarnya meminta ***path***, yaitu semacam \"alamat\" yang dikenal oleh komputer untuk mencari letak dari *file* yang diinginkan. Apabila *file* berada di *folder* yang sama, cukup namanya saja yang diketik.\n\n* Alternatif dari `More > Set As Working Directory` adalah dengan malah menekan `More > Copy Folder Path to Clipboard`, untuk memperoleh *string* yang kemudian bisa kalian *paste* ke dalam perinah `read.csv` ataupun `read_excel`.\n\n* Nama `df1` dan `df2` itu sebenarnya nama variabel, sehingga terserah kalian, tidak harus `df1` ataupun `df2`.\n\n* \"df\" adalah singkatan dari *data frame*. Singkat cerita, *data frame* adalah tabel, yang bisa memiliki sejumlah kolom (terkadang disebut \"fitur\") dan sejumlah baris.\n\n# Eksplorasi Data dan Statistik Deskriptif\n\n## Statistik deskriptif\n\nSampai sini, kita sudah memiliki tiga *data frame*, yaitu `iris` (*built-in*), `df1` (dari `.csv`), dan `df2` (dari `.xlsx`). Semuanya sama saja. Untuk eksplorasi lebih lanjut, mungkin kita gunakan nama `df1` saja ya. Nanti kalau kalian ada data lain yang ingin dieksplorasi, kalian bisa mengganti *path* di kode *import* di atas.\n\nMari kita lihat lagi datanya:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(df1)\n```\n:::\n\n\nKita bisa gunakan fungsi `ls` untuk melihat nama-nama kolom, dan fungsi `dim` untuk melihat ukuran/dimensi tabel (sekian baris dikali sekian kolom):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nls(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Petal.Length\" \"Petal.Width\"  \"Sepal.Length\" \"Sepal.Width\"  \"Species\"     \n```\n\n\n:::\n\n```{.r .cell-code}\ndim(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 150   5\n```\n\n\n:::\n:::\n\n\nKita bisa sekilas melihat *data frame* tersebut dengan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : chr  \"setosa\" \"setosa\" \"setosa\" \"setosa\" ...\n```\n\n\n:::\n:::\n\n\nUntuk memilih kolom tertentu, gunakan simbol dolar atau `$` seperti berikut:\n\n```\nnama_data_frame$nama_kolom\n```\n\nMisalnya, untuk memanggil kolom `Sepal.Length` saja,\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1$Sepal.Length\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 5.1\n [19] 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5 4.9 5.0\n [37] 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0 6.4 6.9 5.5\n [55] 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8 6.2 5.6 5.9 6.1\n [73] 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4 6.0 6.7 6.3 5.6 5.5\n [91] 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8 7.1 6.3 6.5 7.6 4.9 7.3\n[109] 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7 6.0 6.9 5.6 7.7 6.3 6.7 7.2\n[127] 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8\n[145] 6.7 6.7 6.3 6.5 6.2 5.9\n```\n\n\n:::\n:::\n\n\nRingkasan data, meliputi statistik deskriptif seperti minimum, maksimum, dan rata-rata, bisa diperoleh dengan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n   Species         \n Length:150        \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\nApabila kalian spesifik memerlukan nilai tertentu, tiap statistik deskriptif ada perintahnya sendiri, yang bisa diterapkan untuk tiap kolom.\n\nSebagai contoh, untuk kolom `Sepal.Length`, berikut **ukuran pemusatan data**, misalnya *median* (nilai tengah) dan *mean* (rata-rata):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(df1$Sepal.Length) # median (nilai tengah)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.8\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(df1$Sepal.Length) # rata-rata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.843333\n```\n\n\n:::\n:::\n\n\nUntuk nilai modus (yang juga bisa dianggap ukuran pemusatan data), gunakan fungsi `Mode` dari *package* `DescTools`, yang tentunya perlu diinstal terlebih dahulu kalau belum, lalu diaktifkan (perhatikan huruf kapital):\n\n```\ninstall.packages(\"DescTools\") # instal kalau belum\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DescTools) # aktifkan\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMode(df1$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\nattr(,\"freq\")\n[1] 10\n```\n\n\n:::\n:::\n\n\nKemudian, berikut **ukuran keragaman data** (juga disebut **persebaran data**):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(df1$Sepal.Length) # variansi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6856935\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(df1$Sepal.Length) # standard deviation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8280661\n```\n\n\n:::\n:::\n\n\nBerikut ukuran rentang data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(df1$Sepal.Length) # minimum\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.3\n```\n\n\n:::\n\n```{.r .cell-code}\nmax(df1$Sepal.Length) # maksimum\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.9\n```\n\n\n:::\n\n```{.r .cell-code}\nrange(df1$Sepal.Length) # rentang: batas bawah, batas atas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.3 7.9\n```\n\n\n:::\n:::\n\n\nBeberapa ukuran lainnya:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(df1$Sepal.Length) # banyaknya baris/data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 150\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(df1$Sepal.Length) # sumasi/jumlah seluruh data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 876.5\n```\n\n\n:::\n:::\n\n\nTentu, ukuran-ukuran tersebut berupa nilai yang nantinya bisa disimpan ataupun digunakan untuk perhitungan lain. Misalnya, ada yang namanya *standard error*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstd_err <- sd(df1$Sepal.Length) / sqrt(length(df1$Sepal.Length))\n```\n:::\n\n\nSelain itu, ada juga fungsi untuk memperoleh data secara terurut, yaitu `sort`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(df1$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 4.3 4.4 4.4 4.4 4.5 4.6 4.6 4.6 4.6 4.7 4.7 4.8 4.8 4.8 4.8 4.8 4.9 4.9\n [19] 4.9 4.9 4.9 4.9 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.1 5.1 5.1 5.1\n [37] 5.1 5.1 5.1 5.1 5.1 5.2 5.2 5.2 5.2 5.3 5.4 5.4 5.4 5.4 5.4 5.4 5.5 5.5\n [55] 5.5 5.5 5.5 5.5 5.5 5.6 5.6 5.6 5.6 5.6 5.6 5.7 5.7 5.7 5.7 5.7 5.7 5.7\n [73] 5.7 5.8 5.8 5.8 5.8 5.8 5.8 5.8 5.9 5.9 5.9 6.0 6.0 6.0 6.0 6.0 6.0 6.1\n [91] 6.1 6.1 6.1 6.1 6.1 6.2 6.2 6.2 6.2 6.3 6.3 6.3 6.3 6.3 6.3 6.3 6.3 6.3\n[109] 6.4 6.4 6.4 6.4 6.4 6.4 6.4 6.5 6.5 6.5 6.5 6.5 6.6 6.6 6.7 6.7 6.7 6.7\n[127] 6.7 6.7 6.7 6.7 6.8 6.8 6.8 6.9 6.9 6.9 6.9 7.0 7.1 7.2 7.2 7.2 7.3 7.4\n[145] 7.6 7.7 7.7 7.7 7.7 7.9\n```\n\n\n:::\n:::\n\n\n## Mem-*filter* data\n\nSelain statistik deskriptif, kita juga bisa menerapkan manipulasi sederhana pada. Sebelumnya, kita telah menggunakan simbol dolar `$` untuk melakukan ***subsetting***, lebih tepatnya memilih kolom tertentu.\n\nFitur *subsetting* ini sebenarnya ada fungsinya sendiri, yang tidak hanya bisa memilih kolom tertentu, tetapi juga bisa memilih semua baris yang memenuhi kriteria tertentu pada kolom. \n\nContohnya, untuk memilih semua baris dengan spesies tertentu:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubset(df1, Species == \"versicolor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n```\n\n\n:::\n:::\n\n\nBisa juga, memilih semua baris dengan `Sepal.Length` yang cukup besar:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubset(df1, Sepal.Length >= 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n```\n\n\n:::\n:::\n\n\nSelain *subsetting*, ada juga *indexing*. Kita bisa mengakses baris dan kolom tertentu pada tabel menggunakan kurung siku.\n\nMisalnya, perhatikan data `Sepal.Width`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1$Sepal.Width\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 3.5 3.0 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 3.7 3.4 3.0 3.0 4.0 4.4 3.9 3.5\n [19] 3.8 3.8 3.4 3.7 3.6 3.3 3.4 3.0 3.4 3.5 3.4 3.2 3.1 3.4 4.1 4.2 3.1 3.2\n [37] 3.5 3.6 3.0 3.4 3.5 2.3 3.2 3.5 3.8 3.0 3.8 3.2 3.7 3.3 3.2 3.2 3.1 2.3\n [55] 2.8 2.8 3.3 2.4 2.9 2.7 2.0 3.0 2.2 2.9 2.9 3.1 3.0 2.7 2.2 2.5 3.2 2.8\n [73] 2.5 2.8 2.9 3.0 2.8 3.0 2.9 2.6 2.4 2.4 2.7 2.7 3.0 3.4 3.1 2.3 3.0 2.5\n [91] 2.6 3.0 2.6 2.3 2.7 3.0 2.9 2.9 2.5 2.8 3.3 2.7 3.0 2.9 3.0 3.0 2.5 2.9\n[109] 2.5 3.6 3.2 2.7 3.0 2.5 2.8 3.2 3.0 3.8 2.6 2.2 3.2 2.8 2.8 2.7 3.3 3.2\n[127] 2.8 3.0 2.8 3.0 2.8 3.8 2.8 2.8 2.6 3.0 3.4 3.1 3.0 3.1 3.1 3.1 2.7 3.2\n[145] 3.3 3.0 2.5 3.0 3.4 3.0\n```\n\n\n:::\n:::\n\n\nKebetulan, `Sepal.Width` adalah kolom pertama pada tabel. Dari tabel `df1`, kita bisa memilih lima baris pertama dari kolom kedua, yaitu lima baris pertama dari `Sepal.Width`, seperti berikut:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1[1:5, 2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.5 3.0 3.2 3.1 3.6\n```\n\n\n:::\n:::\n\n\nPerhatikan bahwa bentuk data di atas sudah tidak seperti *data frame* yang berbentuk tabel rapi. Kita bisa tambahkan opsi `drop = FALSE` agar tetap seperti tabel:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1[1:5, 2, drop = FALSE]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Width\n1         3.5\n2         3.0\n3         3.2\n4         3.1\n5         3.6\n```\n\n\n:::\n:::\n\n\nAda juga fungsi `which` yang agak terbalik dari *subsetting*: mencari baris mana saja yang memenuhi kriteria tertentu. Misalnya, kita bisa memperoleh baris mana saja yang memiliki data spesies tertentu.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(df1$Species == \"versicolor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69\n[20]  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88\n[39]  89  90  91  92  93  94  95  96  97  98  99 100\n```\n\n\n:::\n:::\n\n\nGunanya? Kita bisa gabungkan ini dengan *indexing*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_versicolor <- which(df1$Species == \"versicolor\")\ndf1[index_versicolor,] # entah kenapa, harus ada koma\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n```\n\n\n:::\n:::\n\n\nSebenarnya, ada alternatif dari fungsi `subset`, yaitu fungsi `filter` dari *package* `dplyr`. Mari instal kalau belum, lalu aktifkan:\n\n```\ninstall.packages(\"dplyr\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n\nKita bisa gunakan sebagaimana menggunakan fungsi `subset` tadi:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(df1, Species == \"versicolor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1           7.0         3.2          4.7         1.4 versicolor\n2           6.4         3.2          4.5         1.5 versicolor\n3           6.9         3.1          4.9         1.5 versicolor\n4           5.5         2.3          4.0         1.3 versicolor\n5           6.5         2.8          4.6         1.5 versicolor\n6           5.7         2.8          4.5         1.3 versicolor\n7           6.3         3.3          4.7         1.6 versicolor\n8           4.9         2.4          3.3         1.0 versicolor\n9           6.6         2.9          4.6         1.3 versicolor\n10          5.2         2.7          3.9         1.4 versicolor\n11          5.0         2.0          3.5         1.0 versicolor\n12          5.9         3.0          4.2         1.5 versicolor\n13          6.0         2.2          4.0         1.0 versicolor\n14          6.1         2.9          4.7         1.4 versicolor\n15          5.6         2.9          3.6         1.3 versicolor\n16          6.7         3.1          4.4         1.4 versicolor\n17          5.6         3.0          4.5         1.5 versicolor\n18          5.8         2.7          4.1         1.0 versicolor\n19          6.2         2.2          4.5         1.5 versicolor\n20          5.6         2.5          3.9         1.1 versicolor\n21          5.9         3.2          4.8         1.8 versicolor\n22          6.1         2.8          4.0         1.3 versicolor\n23          6.3         2.5          4.9         1.5 versicolor\n24          6.1         2.8          4.7         1.2 versicolor\n25          6.4         2.9          4.3         1.3 versicolor\n26          6.6         3.0          4.4         1.4 versicolor\n27          6.8         2.8          4.8         1.4 versicolor\n28          6.7         3.0          5.0         1.7 versicolor\n29          6.0         2.9          4.5         1.5 versicolor\n30          5.7         2.6          3.5         1.0 versicolor\n31          5.5         2.4          3.8         1.1 versicolor\n32          5.5         2.4          3.7         1.0 versicolor\n33          5.8         2.7          3.9         1.2 versicolor\n34          6.0         2.7          5.1         1.6 versicolor\n35          5.4         3.0          4.5         1.5 versicolor\n36          6.0         3.4          4.5         1.6 versicolor\n37          6.7         3.1          4.7         1.5 versicolor\n38          6.3         2.3          4.4         1.3 versicolor\n39          5.6         3.0          4.1         1.3 versicolor\n40          5.5         2.5          4.0         1.3 versicolor\n41          5.5         2.6          4.4         1.2 versicolor\n42          6.1         3.0          4.6         1.4 versicolor\n43          5.8         2.6          4.0         1.2 versicolor\n44          5.0         2.3          3.3         1.0 versicolor\n45          5.6         2.7          4.2         1.3 versicolor\n46          5.7         3.0          4.2         1.2 versicolor\n47          5.7         2.9          4.2         1.3 versicolor\n48          6.2         2.9          4.3         1.3 versicolor\n49          5.1         2.5          3.0         1.1 versicolor\n50          5.7         2.8          4.1         1.3 versicolor\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(df1, Sepal.Length >= 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1           7.0         3.2          4.7         1.4 versicolor\n2           6.4         3.2          4.5         1.5 versicolor\n3           6.9         3.1          4.9         1.5 versicolor\n4           6.5         2.8          4.6         1.5 versicolor\n5           6.3         3.3          4.7         1.6 versicolor\n6           6.6         2.9          4.6         1.3 versicolor\n7           6.0         2.2          4.0         1.0 versicolor\n8           6.1         2.9          4.7         1.4 versicolor\n9           6.7         3.1          4.4         1.4 versicolor\n10          6.2         2.2          4.5         1.5 versicolor\n11          6.1         2.8          4.0         1.3 versicolor\n12          6.3         2.5          4.9         1.5 versicolor\n13          6.1         2.8          4.7         1.2 versicolor\n14          6.4         2.9          4.3         1.3 versicolor\n15          6.6         3.0          4.4         1.4 versicolor\n16          6.8         2.8          4.8         1.4 versicolor\n17          6.7         3.0          5.0         1.7 versicolor\n18          6.0         2.9          4.5         1.5 versicolor\n19          6.0         2.7          5.1         1.6 versicolor\n20          6.0         3.4          4.5         1.6 versicolor\n21          6.7         3.1          4.7         1.5 versicolor\n22          6.3         2.3          4.4         1.3 versicolor\n23          6.1         3.0          4.6         1.4 versicolor\n24          6.2         2.9          4.3         1.3 versicolor\n25          6.3         3.3          6.0         2.5  virginica\n26          7.1         3.0          5.9         2.1  virginica\n27          6.3         2.9          5.6         1.8  virginica\n28          6.5         3.0          5.8         2.2  virginica\n29          7.6         3.0          6.6         2.1  virginica\n30          7.3         2.9          6.3         1.8  virginica\n31          6.7         2.5          5.8         1.8  virginica\n32          7.2         3.6          6.1         2.5  virginica\n33          6.5         3.2          5.1         2.0  virginica\n34          6.4         2.7          5.3         1.9  virginica\n35          6.8         3.0          5.5         2.1  virginica\n36          6.4         3.2          5.3         2.3  virginica\n37          6.5         3.0          5.5         1.8  virginica\n38          7.7         3.8          6.7         2.2  virginica\n39          7.7         2.6          6.9         2.3  virginica\n40          6.0         2.2          5.0         1.5  virginica\n41          6.9         3.2          5.7         2.3  virginica\n42          7.7         2.8          6.7         2.0  virginica\n43          6.3         2.7          4.9         1.8  virginica\n44          6.7         3.3          5.7         2.1  virginica\n45          7.2         3.2          6.0         1.8  virginica\n46          6.2         2.8          4.8         1.8  virginica\n47          6.1         3.0          4.9         1.8  virginica\n48          6.4         2.8          5.6         2.1  virginica\n49          7.2         3.0          5.8         1.6  virginica\n50          7.4         2.8          6.1         1.9  virginica\n51          7.9         3.8          6.4         2.0  virginica\n52          6.4         2.8          5.6         2.2  virginica\n53          6.3         2.8          5.1         1.5  virginica\n54          6.1         2.6          5.6         1.4  virginica\n55          7.7         3.0          6.1         2.3  virginica\n56          6.3         3.4          5.6         2.4  virginica\n57          6.4         3.1          5.5         1.8  virginica\n58          6.0         3.0          4.8         1.8  virginica\n59          6.9         3.1          5.4         2.1  virginica\n60          6.7         3.1          5.6         2.4  virginica\n61          6.9         3.1          5.1         2.3  virginica\n62          6.8         3.2          5.9         2.3  virginica\n63          6.7         3.3          5.7         2.5  virginica\n64          6.7         3.0          5.2         2.3  virginica\n65          6.3         2.5          5.0         1.9  virginica\n66          6.5         3.0          5.2         2.0  virginica\n67          6.2         3.4          5.4         2.3  virginica\n```\n\n\n:::\n:::\n\n\nBedanya? Selain namanya lebih jelas, fungsi `filter` ini cenderung lebih cepat untuk data yang besar, misalnya puluhan ribu baris.\n\n# Visualisasi Frekuensi\n\n## *Bar Chart*\n\n## *Pie Chart*\n\n## *Histogram*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}