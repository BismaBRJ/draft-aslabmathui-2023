{
  "hash": "74f1b7a9549b2e47fef4a8c46bc3525e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Review R dan Regresi Linier Sederhana\"\nsubtitle: \"Simple Linear Regression\"\nimage: static\\Plot regresi.png\ndescription: \"Offline di Departemen Matematika\"\ndate: 09/23/2024\npage-navigation: true\nformat: html\n---\n\n\n# Review R\n\n## Instalasi Library\n\n**<span style=\"color: #FF6F61;\">install.packages</span>**\n(**<span style=\"color: #FF6F61;\">`Nama Packages`</span>**) , untuk mengunduh library yang diperlukan kita dapat mengganti `Nama Packages` dengan packages yang kita butuhkan. Jangan lupa untuk menambahkan tanda `\" \"` atau `' '` sebelum dan sesudah Nama packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('psych')\n```\n:::\n\n\n## Mengimport Library\n\n**<span style=\"color: #FF6F61;\">library</span>**\n(**<span style=\"color: #FF6F61;\">`Nama Packages`</span>**) , untuk mengimport atau menggunakan library yang sudah diunduh sebelumnya kita dapat menggunakan fungsi tersebut dengan mengubah `Nama Packages` menjadi packages yang dibutuhkan atau yang sudah diunduh sebelumnya. Pada bagian import library tidak diperlukan tanda `\" \"` atau `' '`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\n```\n:::\n\n\n## Membaca Data\n\npada dasarnya pembacaan file di R studio bisa berbagai macam format file , untuk contohnya:\n\n- **<span style=\"color: #FF6F61;\">library</span>** (**<span style=\"color: #FF6F61;\">`readxl`</span>**) untuk membaca data yang berformat `.xlsx` atau `.xls`\n- **<span style=\"color: #FF6F61;\">library</span>** (**<span style=\"color: #FF6F61;\">`readr`</span>**) untuk membaca data yang berformat `.csv`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(readr)\n```\n:::\n\n\n### Tahap - Tahap Membaca Data\n\n1. Membuka Menu File pada RStudio\n\n![](static/File%20Menu.png)\n\n2. Memilih File / Data yang diinginkan\n\n![](static/File%20Name.png)\n\n3. Memilih section `import dataset`\n\n![](static/File%20Section.png)\n\n4. Megcopy File Path URL\n\n![](static/File%20URL.png)\n\nsetelah mendapatkan file url , selanjutnya akan dibaca menggunakan **<span style=\"color: #FF6F61;\">read_csv</span>**\n(**<span style=\"color: #FF6F61;\">`'file_url'`</span>**) , jangan lupa untuk mengubah file url sesuai file url yang didapatkan dari tahap mecari data. Selain itu jangan lupa untuk menambahkan tanda `' '` atau `\" \"` sebelum dan sesudah file url yang didapatkan. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\ndata <- read_csv('~/Downloads/Iris.csv')\n```\n:::\n\n\n## Memeriksa Data\n\nUntuk melanjutkan modul ini, akan digunakan dataset iris bawaan r yang dapat diakses dengan syntax berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(iris)\ndata <- iris\n```\n:::\n\n\nUntuk memeriksa data dapat menggunakan banyak cara diantaranya:\n\n1. **<span style=\"color: #FF6F61;\">View</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , untuk melihat keseluruhan data\n2. **<span style=\"color: #FF6F61;\">head</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , untuk melihat 6 data teratas\n3. **<span style=\"color: #FF6F61;\">tail</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , untuk melihat 6 data terbawah \n\njangan lupa untuk mengubah variabel `data` sesuai dengan variabel yang didefinisikan sebelumnya.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntail(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n\n\n:::\n:::\n\n\n## Tipe Data\n\nUntuk memperoleh informasi tipe data dari sebuah data kita akan menggunakan  **<span style=\"color: #FF6F61;\">str</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , jangan lupa untuk mengubah `data` sesuai variabel yang didefinisikan sebelumnya\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n\n:::\n:::\n\n\nPenjelasan tipe data:\n\n- `num` : Num mengartikan bahwa variabel tersebut adalah nilai numerik / sebuah angka\n- `chr` : Chr mengartikan bahwa variabel tersebut adalah nilai yang berupa tulisan atau bisa disebut juga string\n\n## Statistik Deksriptif\n\nUntuk memeriksa statisika deskriptif dari data dapat menggunakan:\n\n1. **<span style=\"color: #FF6F61;\">library</span>** (**<span style=\"color: #FF6F61;\">`psych`</span>**)\n2. **<span style=\"color: #FF6F61;\">library</span>** (**<span style=\"color: #FF6F61;\">`DescTools`</span>**)\n3. **<span style=\"color: #FF6F61;\">library</span>** (**<span style=\"color: #FF6F61;\">`moments`</span>**)\n\nUntuk penjelasan fungsi statistik deskriptif bisa dilihat pada tabel berikut:\n\n\n| **Fungsi**                            | **Penjelasan**                                                                          | **Library**     |\n|----------------------------------------|------------------------------------------------------------------------------------------|-----------------|\n| `mean(data)`                             | Menghitung rata-rata dari data.                                                       | Base R          |\n| `median(data)`                           | Menghitung nilai tengah dari data.                                                    | Base R          |\n| `sum(data)`                              | Menghitung jumlah total elemen dalam data.                                                 | Base R          |\n| `sd(data)`                               | Menghitung standar deviasi dari data.                                                 | Base R          |\n| `var(data)`                              | Menghitung varians dari data.                                                         | Base R          |\n| `Mode(data)`                             | Menghitung modus dari data, nilai yang paling sering muncul.                          | DescTools       |\n| `standarerror <- sd(data)/sqrt(length(data))`| Menghitung standar error dari data.                                                   | Base R          |\n| `sort(data)`                             | Mengurutkan elemen dalam dari nilai terkecil ke terbesar.                             | Base R          |\n| `min(data)`                              | Menghitung nilai minimum dari data.                                                   | Base R          |\n| `max(data)`                              | Menghitung nilai maksimum dari data.                                                  | Base R          |\n| `range(data)`                            | Menghitung selisih antara nilai maksimum dan minimum dari data.                       | Base R          |\n| `quantile(data, prob=0.25)`              | Menghitung kuartil ke-1 (Q1) atau persentil ke-25 dari data.                          | Base R          |\n| `quantile(data, prob=0.75)`              | Menghitung kuartil ke-3 (Q3) atau persentil ke-75 dari data.                          | Base R          |\n| `skewness(data)`                         | Menghitung kemiringan distribusi (skewness) dari data.                                | moments         |\n| `kurtosis(data)`                         | Menghitung keruncingan distribusi (kurtosis) dari data.                               | moments         |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\nlibrary(DescTools)\nlibrary(moments)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(data$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.758\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(data$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.35\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(data$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.765298\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(data$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.116278\n```\n\n\n:::\n:::\n\n\nuntuk melihat keseluruhan statistika deskriptif dapat menggunakan :\n\n- **<span style=\"color: #FF6F61;\">summary</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , \n- **<span style=\"color: #FF6F61;\">describe</span>** (**<span style=\"color: #FF6F61;\">`data`</span>**) , menggunakan library `psych` untuk statistika deksriptif yang lebih advance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndescribe(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             vars   n mean   sd median trimmed  mad min max range  skew\nSepal.Length    1 150 5.84 0.83   5.80    5.81 1.04 4.3 7.9   3.6  0.31\nSepal.Width     2 150 3.06 0.44   3.00    3.04 0.44 2.0 4.4   2.4  0.31\nPetal.Length    3 150 3.76 1.77   4.35    3.76 1.85 1.0 6.9   5.9 -0.27\nPetal.Width     4 150 1.20 0.76   1.30    1.18 1.04 0.1 2.5   2.4 -0.10\nSpecies*        5 150 2.00 0.82   2.00    2.00 1.48 1.0 3.0   2.0  0.00\n             kurtosis   se\nSepal.Length    -0.61 0.07\nSepal.Width      0.14 0.04\nPetal.Length    -1.42 0.14\nPetal.Width     -1.36 0.06\nSpecies*        -1.52 0.07\n```\n\n\n:::\n:::\n\n\n## Split Data\n\n- untuk membuat split data kita dapat menggunakan : **<span style=\"color: #FF6F61;\">sample</span>**() ,\n\n- untuk memperoleh hasil yang selalu sama jangan lupa untuk mengatur seed dengan cara :\n**<span style=\"color: #FF6F61;\">set.seed</span>**(**<span style=\"color: #FF6F61;\">`42`</span>**) , angka `42` dapat digantikan sesuai yang diinginkan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42) \n\nindex <- sample(1:nrow(data), size = 0.8 * nrow(data))\n\ntrain_data <- data[index, ]  # 80% of the data\ntest_data <- data[-index, ] # 20% of the data\n```\n:::\n\n\n`size` dapaat diatur sesuai ketentuan , jika ketentuannya diambil 70% data maka dapat mengubah `size` menjadi 0.7.\n\n# Regresi Linier Sederhana\n\nUntuk mendefinisikan suatu regresi linier sederhana kita dapat menggunakan fungsi **<span style=\"color: #FF6F61;\">lm()</span>** , dengan cara:\n\n**<span style=\"color: #FF6F61;\">lm</span>**(**<span style=\"color: #FF6F61;\">`variabel response` ~ `variabel prediktor` , data = `data`</span>**)\n\ndimana :\n\n- Variabel Response (`y`)\n- Variabel Prediktor (`X`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Petal.Length ~ Petal.Width, data = train_data)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Petal.Length ~ Petal.Width, data = train_data)\n\nCoefficients:\n(Intercept)  Petal.Width  \n      1.065        2.241  \n```\n\n\n:::\n:::\n\n\n## Interpretasi `summary(model)`\n\nFungsi `summary(model)` dapat digunakan untuk melihat informasi mengenai model yang telah dibentuk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Petal.Length ~ Petal.Width, data = train_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.34299 -0.29932 -0.01289  0.21392  1.39796 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  1.06470    0.08205   12.98   <2e-16 ***\nPetal.Width  2.24096    0.05813   38.55   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4858 on 118 degrees of freedom\nMultiple R-squared:  0.9264,\tAdjusted R-squared:  0.9258 \nF-statistic:  1486 on 1 and 118 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n## Visualisasi Model\n\nUntuk membuat visualisasi regresi linier sederhana, lakukan langkah-langkah berikut:\n1. Buat scatter plot variabel respons dan variabel prediktor dengan function `plot(pred, resp)`\n2. Buat garis regresi dengan function `abline(model)`\n3. Buat keterangan garis regresi dengan function `legend()` (*optional)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter Plot Petal.Width ~ Petal.Length\nplot(iris$Petal.Width,\n     iris$Petal.Length,\n     xlab = \"Petal Width\",\n     ylab = \"Petal Length\",\n     main = \"Plot Regresi Petal Length ~ Petal Width\",\n     pch = 20)\n\n# Garis Regresi\nabline(model,\n       col = \"red\",\n       lwd = 2)\n\nlegend(\"bottomright\",\n       legend = \"Garis Regresi\",\n       col = \"blue\",\n       lwd = 2,\n       bty = \"n\")\n```\n:::\n\n\n![](static/Plot%20regresi.png)\n\n## Interval Kepercayaan dan Interval Prediksi \n\nInterval Kepercayaan untuk taksiran koefisien dapat dihitung dengan fungsi `confint(model)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(model, level = 0.9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  5 %     95 %\n(Intercept) 0.9286741 1.200722\nPetal.Width 2.1445814 2.337330\n```\n\n\n:::\n:::\n\n\nInterval Prediksi untuk suatu nilai-nilai di luar data yang digunakan untuk pemodelan dapat dihitung dengan fungsi `predict(model, newdata, interval='prediction')`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model, newdata = test_data, interval = \"prediction\", level = 0.9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         fit       lwr      upr\n7   1.736985 0.9237712 2.550199\n11  1.512889 0.6986056 2.327173\n12  1.512889 0.6986056 2.327173\n19  1.736985 0.9237712 2.550199\n23  1.512889 0.6986056 2.327173\n28  1.512889 0.6986056 2.327173\n37  1.512889 0.6986056 2.327173\n45  1.961081 1.1488239 2.773337\n46  1.736985 0.9237712 2.550199\n51  4.202036 3.3930740 5.010999\n52  4.426132 3.6168682 5.235396\n56  3.977941 3.1691650 4.786717\n59  3.977941 3.1691650 4.786717\n70  3.529750 2.7210025 4.338497\n75  3.977941 3.1691650 4.786717\n78  4.874323 4.0641131 5.684533\n79  4.426132 3.6168682 5.235396\n82  3.305654 2.4967490 4.114559\n91  3.753845 2.9451412 4.562549\n95  3.977941 3.1691650 4.786717\n101 6.667088 5.8485520 7.485624\n106 5.770706 4.9572348 6.584176\n112 5.322514 4.5109012 6.134128\n116 6.218897 5.4031172 7.034676\n117 5.098419 4.2875641 5.909274\n127 5.098419 4.2875641 5.909274\n133 5.994801 5.1802322 6.809370\n134 4.426132 3.6168682 5.235396\n137 6.442992 5.6258903 7.260094\n148 5.546610 4.7341246 6.359095\n```\n\n\n:::\n:::\n\n\nUntuk suatu nilai x tertentu, dapat dicari interval prediksinya dengan syntax berikut\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model, newdata = data.frame(Petal.Width=20), interval = \"prediction\", level = 0.9)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       fit      lwr      upr\n1 45.88382 43.89859 47.86904\n```\n\n\n:::\n:::\n\n\n## Representasi Grafik Residual Model\n\nResidual model dapat diakses dengan memanggil `model$residual` atau `resid(model)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(model$residual)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          49           65           74          146          122          150 \n-0.012889406 -0.377940869  0.946154718 -1.018896745 -0.646609982  0.001581193 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(resid(model))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          49           65           74          146          122          150 \n-0.012889406 -0.377940869  0.946154718 -1.018896745 -0.646609982  0.001581193 \n```\n\n\n:::\n:::\n\n\nPlot residual dapat dibentuk dengan cara-cara berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(model$residual)\n```\n\n::: {.cell-output-display}\n![](modul1_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(model, 1)\n```\n\n::: {.cell-output-display}\n![](modul1_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(model$residual)\n```\n\n::: {.cell-output-display}\n![](modul1_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::",
    "supporting": [
      "modul1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}