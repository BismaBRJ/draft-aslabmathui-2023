[
  {
    "objectID": "semuahalaman/praktikum.html",
    "href": "semuahalaman/praktikum.html",
    "title": "Praktikum",
    "section": "",
    "text": "Praktikum spesial\n\nMIPA Open House, Departemen Matematika\nSabtu, 9 November 2024\n\nPraktikum rutin\n\nMata Kuliah Praktikum Algoritma dan Pemrograman (Kurikulum 2024)\nModel Linier (Kurikulum 2020)\nPengantar Multivariat dan Statistika Nonparametrik (Kurikulum 2020)\nPengantar Sains Data (Kurikulum 2024)\nStruktur Data (Kurikulum 2020)\n\n\n\n\n\nEksplorasi/EDA dan Visualisasi Data (Kurikulum 2020)\nKalkulus 2 & Aljabar Linier 1 (Kurikulum 2020)\nMetode Numerik (Kurikulum 2020)\nPersamaan Diferensial Numerik (Kurikulum 2020)\nSains Data (Kurikulum 2020)"
  },
  {
    "objectID": "semuahalaman/praktikum.html#tahun-2024",
    "href": "semuahalaman/praktikum.html#tahun-2024",
    "title": "Praktikum",
    "section": "",
    "text": "Praktikum spesial\n\nMIPA Open House, Departemen Matematika\nSabtu, 9 November 2024\n\nPraktikum rutin\n\nMata Kuliah Praktikum Algoritma dan Pemrograman (Kurikulum 2024)\nModel Linier (Kurikulum 2020)\nPengantar Multivariat dan Statistika Nonparametrik (Kurikulum 2020)\nPengantar Sains Data (Kurikulum 2024)\nStruktur Data (Kurikulum 2020)\n\n\n\n\n\nEksplorasi/EDA dan Visualisasi Data (Kurikulum 2020)\nKalkulus 2 & Aljabar Linier 1 (Kurikulum 2020)\nMetode Numerik (Kurikulum 2020)\nPersamaan Diferensial Numerik (Kurikulum 2020)\nSains Data (Kurikulum 2020)"
  },
  {
    "objectID": "semuahalaman/praktikum.html#tahun-2023",
    "href": "semuahalaman/praktikum.html#tahun-2023",
    "title": "Praktikum",
    "section": "Tahun 2023",
    "text": "Tahun 2023\n\nSemester Ganjil (September-Desember)\n\nPengantar Sains Data (Kurikulum 2020)\nStruktur Data, dengan Python (Kurikulum 2020)\n\n\n\nSemester Genap (Februari-Juni)\n\nEksplorasi/EDA dan Visualisasi Data (Kurikulum 2020)\nMetode Numerik (Kurikulum 2020)\nPersamaan Diferensial Numerik (Kurikulum 2020)\nSains Data (Kurikulum 2020)"
  },
  {
    "objectID": "semuahalaman/praktikum.html#tahun-2022",
    "href": "semuahalaman/praktikum.html#tahun-2022",
    "title": "Praktikum",
    "section": "Tahun 2022",
    "text": "Tahun 2022\n\nSemester Ganjil (September-Desember)\n\nStruktur Data (Kurikulum 2020) (modul belum tersedia)\n\n\n\nSemester Genap (Februari-Juni)\n\nSains Data (Kurikulum 2020)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/mipa_open_house.html",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/mipa_open_house.html",
    "title": "MIPA Open House - Sabtu, 9 November 2024",
    "section": "",
    "text": "Kembali ke Praktikum\n\n\n\n\n\n\n\n\n\n\n\nSesi 1: Praktikum Kalkulus\n\n\n\n\n\n\n\n\n\n\nSesi 2: Praktikum Algoritma Pemrograman\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "",
    "text": "Kembali ke MIPA Open House\nKalian bisa men-download modul ini dalam format .ipynb dengan memencet tombol berikut:\nDownload sesi2.ipynb.zip\nTampilkan Hello, World!\nUntuk membuat catatan atau comment, gunakan #"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#operasi-dasar",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#operasi-dasar",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Operasi Dasar",
    "text": "Operasi Dasar\n\nTambah: +\nKurang: -\nKali: *\nBagi: /\nModulo (hasil bagi): %\nPangkat: **\n\n\n# tambah\n\n\n# kurang\n\n\n# kali\n\n\n# bagi\n\n\n# modulo\n\n\n# pangkat\n\n\\[\\frac{3^2 - 5}{2} + 1 = \\text{ ?}\\]"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#variabel-input-string",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#variabel-input-string",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Variabel, Input, String",
    "text": "Variabel, Input, String\n\na = 2\nb = 3\na = b\nprint(a)\nprint(b)\n\n\nnama = input(\"Masukkan nama: \")\nprint(nama)\n\n\nkalimat = \"Nama saya \" + nama\nprint(kalimat)\n\n\nprint(\"Nama saya \" + nama)\n\n\nnama = input(\"Masukkan nama: \")\nprint(\"Nama saya \" + nama)\n\nBuatlah kode yang menerima input nama lalu menghasilkan pesan:\n\nSelamat siang (nama)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#tipe-data",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#tipe-data",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Tipe Data",
    "text": "Tipe Data\n\nnama = input(\"Masukkan nama: \")\nprint(nama)\n\nMasukkan nama: Sam\nSam\n\n\n\nprint(type(nama))\n\n&lt;class 'str'&gt;\n\n\n\nx_masuk = input(\"Masukkan angka: \")\nprint(x_masuk)\n\nMasukkan angka: 25\n25\n\n\n\nprint(type(x_masuk))\n\n&lt;class 'str'&gt;\n\n\n\nx_angka = int(x_masuk)\nprint(x_angka)\n\n25\n\n\n\nprint(type(x_angka))\n\n&lt;class 'int'&gt;\n\n\n\ny = int(input(\"Masukkan angka: \"))\nprint(y)\n\nMasukkan angka: 30\n30\n\n\n\nprint(type(y))\n\n&lt;class 'int'&gt;"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#pernyataan-bersyaratkondisional-if-elif-else-if-else",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#pernyataan-bersyaratkondisional-if-elif-else-if-else",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Pernyataan Bersyarat/Kondisional: if, elif (else if), else",
    "text": "Pernyataan Bersyarat/Kondisional: if, elif (else if), else\n\nx = int(input(\"Masukkan angka: \"))\nif (x % 2 == 0):\n  print(\"Genap\")\nelse:\n  print(\"Ganjil\")\n\nMasukkan angka: 5\nGanjil"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#pernyataan-berulang-for-while",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#pernyataan-berulang-for-while",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Pernyataan Berulang: for, while",
    "text": "Pernyataan Berulang: for, while\nProblem: hitung\n\\[1 + 2 + 3 + \\dots + 100 = \\text{ ?}\\]\n\nhasil = 0\nfor i in range(1, 100+1):\n  hasil = hasil + i\nprint(hasil)\n\n5050\n\n\nProblem: Sebuah program mengalikan angka 1 dengan 2 berulang kali hingga hasilnya lebih dari 1000. Berapa kali program mengalikan angka tersebut dan berapa hasil akhirnya?\n\nn = 0\nhasil = 1\nwhile (hasil &lt; 1000):\n  hasil = hasil * 2\n  n = n + 1\nprint(n)\nprint(hasil)\n\n10\n1024\n\n\n\nprint(2**10)\n\n1024"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#list",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#list",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "List",
    "text": "List\n\nbuah = [\"apel\", \"jeruk\", \"pisang\"]\n\n\nprint(buah[0])\n\napel\n\n\n\nprint(buah[1])\n\njeruk\n\n\n\nprint(buah[2])\n\npisang\n\n\n\nprint(len(buah))\n\n3\n\n\n\nfor x in buah:\n  print(\"Saya suka \" + x)\n\nSaya suka apel\nSaya suka jeruk\nSaya suka anggur\n\n\n\nprint(buah)\n\n['apel', 'jeruk', 'pisang']\n\n\n\nbuah[2] = \"anggur\"\n\n\nprint(buah)\n\n['apel', 'jeruk', 'anggur']"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#fungsi",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#fungsi",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Fungsi",
    "text": "Fungsi\nBuatlah fungsi jumlahkan yang menerima input n lalu menghitung\n\\[1 + 2 + 3 + \\dots + n = \\text{ ?}\\]\n\ndef jumlahkan(n):\n  hasil = 0\n  for i in range(1, n+1):\n    hasil = hasil + i\n  return hasil\n\n\nprint(jumlahkan(3))\n\n6\n\n\n\nprint(jumlahkan(100))\n\n5050"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#fungsi-rekursif",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2.html#fungsi-rekursif",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Fungsi Rekursif",
    "text": "Fungsi Rekursif\nBarisan Fibonacci: 0, 1, 1, 2, 3, 5, 8, …\n\\[F_0 = 0, \\quad F_1 = 1\\]\n\\[F_n = F_{n-1} + F_{n-2}\\]\n\ndef fib(n):\n  if (n == 0):\n    return 0\n  elif (n == 1):\n    return 1\n  else:\n    return fib(n-1) + fib(n-2)\n\n\\[F_{10} = \\text{ ?}\\]\n\nfib(10)\n\n55\n\n\nFaktorial:\n\\[0! = 1\\]\n\\[n! = n * (n-1)!\\]\nContoh:\n\\[\\begin{align*}\n5! &= 5 * 4! \\\\\n&= 5 * 4 * 3! \\\\\n&= 5 * 4 * 3 * 2! \\\\\n&= 5 * 4 * 3 * 2 * 1! \\\\\n&= 5 * 4 * 3 * 2 * 1 * 0! \\\\\n&= 5 * 4 * 3 * 2 * 1 * 1 \\\\\n&= 120\n\\end{align*}\\]\n\ndef fact(n):\n  pass # Silakan diisi\n\n\\[10! = \\text{ ?}\\]\n\nfact(10)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "",
    "text": "Kembali ke MIPA Open House\nSelamat datang di Praktikum Kalkulus! Di sini, kalian akan mendapat preview tentang apa yang dipelajari dan biasa dilakukan di praktikum untuk Kalkulus 1 (mata kuliah Praktikum Matematika Dasar) dan praktikum untuk Kalkulus 2.\nFun fact: perangkat lunak atau software yang dibahas di sini juga biasa digunakan untuk praktikum-praktikum Aljabar Linier."
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#operasi-dasar-dan-penulisan",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#operasi-dasar-dan-penulisan",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Operasi Dasar dan Penulisan",
    "text": "Operasi Dasar dan Penulisan\nUntuk memulai pemrograman di Wolfram Mathematica, Anda harus membuat sel terlebih dahulu. Sel adalah struktur dasar dari notebook Wolfram Mathematica. Sebuah sel dapat berisi perintah, teks ilmiah, grafik, ekspresi matematika, elemen interaktif dinamis, dan sebagainya.\nAnda dapat membuat sel di Wolfram Mathematica dengan cara menekan tombol kiri pada mouse saat kursor menunjukkan simbol I horizontal. Setelah muncul garis horizontal pada notebook, silakan ketik hal yang Anda inginkan. Alternatifnya, ketika kursor menunjukkan simbol I horizontal, Anda dapat menekan tombol kanan pada mouse lalu pilih fitur Insert New Cell, kemudian pilih tipe sel yang Anda inginkan.\nSebuah sel di Wolfram Mathematica dapat dihapus dengan cara menekan tombol backspace setelah memilih “kurung sel” yang bersesuaian dengan sel yang ingin dihapus. “Kurung sel” yang dimaksud terletak di pojok kanan notebook. Alternatifnya, Anda dapat menekan Ctrl + . hingga Wolfram Mathematica menyorot “kurung sel” yang bersesuaian dengan sel yang ingin dihapus.\nSecara default, sel di Wolfram Mathematica memiliki gaya input (Alt + 9). Sel dengan gaya input digunakan untuk menjalankan perintah pemrograman di Wolfram Mathematica. Jika Anda ingin menulis teks biasa di Wolfram Mathematica, gunakan gaya text dengan cara menekan Alt + 7 secara bersamaan. Ketika Anda berpindah sel, sel yang baru tidak mengikuti gaya sel sebelumnya. Sehingga, jika Anda ingin membuat sejumlah sel dengan gaya text, maka Anda harus menekan Alt + 7 untuk setiap sel yang ingin dijadikan teks. Dalam sel yang bergaya text, Anda dapat menulis kode dengan cara menekan Ctrl + ( secara bersamaan hingga muncul sebuah kotak. Kotak tersebut dapat Anda isi sesuai dengan kebutuhan. Misalkan, seperti \\(e^{\\pi * i} + 1 = 0\\). Selain itu, dalam sel yang bergaya text, terdapat tiga shortcut lain yang cukup penting, yaitu bold (Ctrl + b), italic (Ctrl + i), dan underline (Ctrl + u).\nSelain gaya input dan text, Wolfram Mathematica memiliki banyak gaya penulisan lain melalui fitur Style pada menu Format. Pada fitur Style, terdapat shortcut untuk setiap gaya penulisan yang tersedia. Jadi, jika Anda lupa shortcut untuk gaya tertentu, Anda dapat mengeceknya melalui fitur Style.\nUntuk menjalankan perintah di Wolfram Mathematica, Anda dapat menekan Shift + Enter secara bersamaan. Sebagai permulaan, Anda dapat menghitung nilai dari 3 + 4 seperti ini.\n\n3 + 4\n\n7\n\n\nWolfram Mathematica akan memberikan pasangan input dan output seperti ilustrasi di atas. Anda dapat membedakan pasangan input dan output tertentu berdasarkan labelnya. Untuk mengolah kembali output terakhir yang diberikan oleh Wolfram Mathematica, Anda dapat menggunakan simbol persen “%” seperti contoh di bawah ini.\n\n% + 5\n\n12\n\n\nAnda juga bisa menjalankan sejumlah perintah sekaligus di Wolfram Mathematica. Caranya, pisahkan perintah yang berbeda pada baris berbeda dengan menekan Enter. Setelah sudah diketik semua, baru tekan Shift + Enter seperti biasa untuk menjalani semua perintah sekaligus.\n\n3 + 4\n3 + 5\n3 + 6\n\n\n\n                                                789\n\n\nPada contoh di atas, terdapat satu kumpulan input dan tiga buah output yang terpisah. Jika Anda hanya ingin melihat output dari sebagian perintahnya saja, Anda dapat memberikan simbol titik koma “;” di akhir setiap perintah yang tidak ingin dilihat output-nya, seperti contoh di bawah ini.\n\n3 + 4\n% + 5;\n% + 5\n\n\n\n                                                \n\n\nPada contoh di atas, output yang ditampilkan hanyalah output untuk perintah pada baris pertama dan ketiga.\nWolfram Mathematica dapat mengerjakan kalkulasi dasar dengan akurasi dan presisi tinggi. Beberapa operasi dasar yang dapat dilakukan di Wolfram Mathematica, yaitu:\n\n3+4 (*Penjumlahan*)\n3-4 (*Pengurangan*)\n3*4 (*Perkalian*)\n3/4 (*Pembagian*)\n3^4 (*Perpangkatan*)\n\n\n\n                                                \n\n\nUntuk menulis comment di Wolfram Mathematica, gunakan simbol kurung lengkung bintang (* dan *)\nComment adalah catatan pada kode, yang gunanya hanya sebagai catatan kita, sehingga tidak akan dibaca oleh Wolfram Mathematica.\nTentunya, perhitungan juga bisa dilakukan dengan desimal, misalnya\n\n0.1 + 0.2\n\n0.3\n\n\nTambahan:\n\nInput pecahan bisa dibuat lebih bagus dengan menekan Ctrl + /\nInput berupa pangkat juga bisa dibuat lebih bagus dengan menekan Ctrl + 6\nKalian bisa tekan Insert &gt; Special Characters untuk memasukkan simbol-simbol tertentu seperti konstanta \\(\\pi\\)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#numerik",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#numerik",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Numerik",
    "text": "Numerik\nPerhitungan di Wolfram bersifat simbolik. Oleh karena itu, pecahan seperti \\(\\frac{3}{4}\\) akan dibiarkan begitu saja, tidak dihitung, kecuali kalau kita minta. Kita bisa meminta perhitungan numerik dengan N seperti berikut\n\nN[3/4]\n\n0.75\n\n\nKalian bisa melihat penjelasan dengan N dengan bertanya, dengan mengetik tanda tanya ? diikuti namanya yaitu N\n\n?N\n\n\n\n\nDengan demikian, kita bisa coba misalnya memperoleh bentuk numerik dari \\(\\pi\\), hingga digit yang kita inginkan:\n\nPi\n\n\n\n\n\nN[Pi]\n\n3.14159\n\n\n\nN[Pi, 100]\n\n3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803\\\n \n&gt;   4825342117068\n\n\nWolfram Mathematica juga menyediakan konstanta \\(e\\) yang bisa ditulis E\n\nE\n\n\n\n\n\nN[E]\n\n2.71828\n\n\n\nN[E, 100]\n\n2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138\\\n \n&gt;   2178525166427\n\n\nKeuntungan dari pendekatan simbolik adalah presisi tingkat tinggi. Kita hanya mengubah ke dalam bentuk numerik ketika memang diperlukan. Misalnya, coba hitung\n\n7/3 - 1\n\n\n\n\nBandingkan dengan hasil kalkulator.\nApabila nilai \\(\\frac{4}{3}\\) yang diperoleh itu memang ingin dihitung menjadi bentuk numerik, barulah kita bisa gunakan N\n\nN[4/3]\n\n1.33333"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#variabel",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#variabel",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Variabel",
    "text": "Variabel\nDalam Wolfram Mathematica, simbol sama dengan “=” digunakan untuk memberikan nilai ke suatu variabel.\n\na = 3\n\n3\n\n\nSekarang, variabel a bernilai 3. Kita dapat mengecek kembali nilai dari sebuah variabel dengan cara memanggil namanya\n\na\n\n3\n\n\nVariabel itu bisa digunakan untuk perhitungan.\n\na + 2\n\n5\n\n\nBahkan, kita bisa menyimpan hasil tersebut di variabel lain.\n\nb = a + 2\n\n5\n\n\n\nb\n\n5\n\n\nMemanfaatkan sifat simbolik dari Wolfram Mathematica, kita bisa membuat variabel baru berdasarkan variabel lain yang bahkan belum ada!\n\ny = x^2 + 2 x + 1\n\n\n\n\nKetika Anda menjalankan perintah di atas, akan terdapat perbedaan warna untuk variabel x dan y. Variabel berwarna hitam di Wolfram Mathematica maknanya sudah memiliki nilai, sedangkan variabel berwarna biru di Wolfram Mathematica maknanya belum memiliki nilai.\nAnda dapat mensubstitusikan suatu nilai ke variabel x yang juga akan berdampak pada nilai dari variabel y\n\nx = 2\n\n2\n\n\nSaat ini, variabel x sudah memiliki nilai 2. Sehingga, ketika Anda cek kembali nilai dari y,\n\ny\n\n9\n\n\nVariabel y kini bernilai 9.\nAnda perlu berhati-hati dengan sebuah variabel di Wolfram Mathematica. Jika Anda menggunakan nama variabel yang sama di dua tempat yang berbeda, maka perintah yang Anda jalankan rawan mengalami eror. Untuk menghindari terjadinya eror, Anda disarankan untuk menghapus nilai dari sebuah variabel setiap kali Anda selesai dengan urusan tertentu menggunakan fungsi built-in Clear\n\n?Clear\n\n\n\n\n\nClear[a, b, x, y]\n\nSetelah Anda menjalankan perintah di atas, variabel yang telah digunakan akan kehilangan nilainya ketika warnanya berubah menjadi biru."
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#fungsi",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#fungsi",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Fungsi",
    "text": "Fungsi\nSelain N dan Clear, Wolfram Mathematica menyediakan fungsi trigonometri seperti Sin dan Cos\n\n?Sin\n\n\n\n\n\nSin[0]\n\n0\n\n\n\nSin[Pi/4]\n\n\n\n\n\nCos[Pi/4]\n\n\n\n\nKita juga bisa mendefinisikan fungsi sendiri.\nUntuk mendefinisikan sebuah fungsi di Wolfram Mathematica, Anda perlu:\n\nMemberikan nama untuk fungsi tersebut. Pastikan bahwa nama fungsi yang Anda gunakan belum pernah digunakan di Wolfram Mathematica. Indikasi nama fungsi yang belum pernah digunakan adalah dari warnanya yang biru. Jika nama fungsi yang Anda berikan berwarna hitam, maka Anda diimbau untuk menggunakan nama lain karena tandanya nama tersebut sudah digunakan oleh Wolfram Mathematica.\nMenggunakan simbol kurung siku “[ ]” untuk menampung input atau parameter-parameter fungsinya.\nMemberikan simbol underscore “_” di akhir setiap parameter fungsi.\nJika terdapat lebih dari satu parameter, maka pisahkan parameter yang berbeda dengan simbol koma “,”.\nMenggunakan simbol titik dua sama dengan “:=” untuk mendefinisikan fungsinya.\n\nContoh fungsi yang didefinisikan dengan baik di Wolfram Mathematica adalah sebagai berikut.\n\nf[x_] = x^2 + 2 x + 1\n\n\n\n\nDengan didefinisikannya fungsi f[x] di atas, Anda dapat memanggil kembali fungsi tersebut dengan mengetik seperti ini.\n\nf[x_]\n\n\n\n\nSelain itu, Anda dapat mengevaluasi fungsi f[x] untuk nilai x tertentu.\n\nf[2]\n\n9\n\n\nSelain fungsi satu variabel (parameter), Anda juga dapat mendefinisikan sebuah fungsi dengan lebih dari satu variabel (parameter) dengan aturan yang sama.\n\ng[x_, y_] := x^2 + y^2 + 1\n\n\ng[x,y]\n\n\n\n\n\ng[5,8]\n\n90\n\n\nFungsi built-in Wolfram Mathematica yang dapat Anda gunakan untuk menggambar grafik fungsi adalah fungsi Plot\n\n?Plot\n\n\n\n\nBerdasarkan deskripsi fungsi Plot di atas, terdapat banyak versi syntax yang dapat digunakan untuk menggambar grafik fungsi sesuai dengan kebutuhan Anda.\nBentuk syntax yang paling sederhana adalah Plot[f[x], {x, a, b}] dengan\n\nf[x] menyatakan fungsi yang ingin digambar,\na menyatakan batas awal grafik, dan\nb menyatakan batas akhir grafik\n\n\nPlot[x^2, {x, -5, 5}]\n\nSystemModelPlot::shdw: Symbol SystemModelPlot appears in multiple contexts {System`, Global`}; definitions in context System` may shadow or be shadowed by other definitions.\n\n\n\n\n\nSelain menuliskan formula dari fungsinya secara manual, Anda juga bisa memberikan nama fungsi beserta variabelnya saja. Tentu, hal ini hanya bisa dilakukan jika sebelumnya fungsi tersebut sudah terdefinisi.\n\nPlot[f[x], {x, -5, 5}]\n\n\n\n\n\nPlot[Sin[x], {x, -5, 5}]\n\n\n\n\nKemudian, fungsi Plot juga bisa digunakan untuk menggambar lebih dari satu grafik fungsi di tempat yang sama. Jika terdapat lebih dari satu fungsi yang ingin digambar grafiknya, Anda perlu mengumpulkan fungsi-fungsi tersebut di dalam simbol kurung kurawal “{ }”.\n\nPlot[{f[x], Sin[x] Cos[x]}, {x, -5, 5}]"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "",
    "text": "Kembali ke MIPA Open House\nKalian bisa men-download modul ini dalam format .ipynb dengan memencet tombol berikut:\nprint(\"Hello world!\")\nprint(\"Selamat pagi\")\nprint(\"Selamat siang\")\nprint(\"Selamat sore\")\nUntuk membuat catatan atau comment, gunakan #\n# ini comment (catatan)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#operasi-dasar",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#operasi-dasar",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Operasi Dasar",
    "text": "Operasi Dasar\n\nTambah: +\nKurang: -\nKali: *\nBagi: /\nModulo (hasil bagi): %\nPangkat: **\n\n\n# tambah\nprint(1 + 2)\n\n\n# kurang\nprint(2-1)\n\n\n# kali\nprint(1*2)\n\n\n# bagi\nprint(2/1)\n\n\n# modulo\nprint(4 % 3)\nprint(5 % 3)\nprint(6 % 3)\n\n\n# pangkat\nprint(4**3)\n\n\\[\\frac{3^2 - 5}{2} + 1 = \\text{ ?}\\]\n\n(3**2 - 5)/2 + 1\n\n3.0"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#variabel-input-string",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#variabel-input-string",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Variabel, Input, String",
    "text": "Variabel, Input, String\n\na = 2\nb = 3\na = b\nprint(a)\nprint(b)\n\n\nnama = input(\"Masukkan nama: \")\nprint(nama)\n\n\nkalimat = \"Nama saya \" + nama\nprint(kalimat)\n\n\nprint(\"Nama saya \" + nama)\n\n\nnama = input(\"Masukkan nama: \")\nprint(\"Nama saya \" + nama)\n\nBuatlah kode yang menerima input nama lalu menghasilkan pesan:\n\nSelamat siang (nama)\n\n\nprint(\"Selamat siang \" + nama)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#tipe-data",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#tipe-data",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Tipe Data",
    "text": "Tipe Data\n\nnama = input(\"Masukkan nama: \")\nprint(nama)\n\nMasukkan nama: Sam\nSam\n\n\n\nprint(type(nama))\n\n&lt;class 'str'&gt;\n\n\n\nx_masuk = input(\"Masukkan angka: \")\nprint(x_masuk)\n\nMasukkan angka: 25\n25\n\n\n\nprint(type(x_masuk))\n\n&lt;class 'str'&gt;\n\n\n\nx_angka = int(x_masuk)\nprint(x_angka)\n\n25\n\n\n\nprint(type(x_angka))\n\n&lt;class 'int'&gt;\n\n\n\ny = int(input(\"Masukkan angka: \"))\nprint(y)\n\nMasukkan angka: 30\n30\n\n\n\nprint(type(y))\n\n&lt;class 'int'&gt;"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#pernyataan-bersyaratkondisional-if-elif-else-if-else",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#pernyataan-bersyaratkondisional-if-elif-else-if-else",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Pernyataan Bersyarat/Kondisional: if, elif (else if), else",
    "text": "Pernyataan Bersyarat/Kondisional: if, elif (else if), else\n\nx = int(input(\"Masukkan angka: \"))\nif (x % 2 == 0):\n  print(\"Genap\")\nelse:\n  print(\"Ganjil\")\n\nMasukkan angka: 5\nGanjil"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#pernyataan-berulang-for-while",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#pernyataan-berulang-for-while",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Pernyataan Berulang: for, while",
    "text": "Pernyataan Berulang: for, while\nProblem: hitung\n\\[1 + 2 + 3 + \\dots + 100 = \\text{ ?}\\]\n\nhasil = 0\nfor i in range(1, 100+1):\n  hasil = hasil + i\nprint(hasil)\n\n5050\n\n\nProblem: …\n\nn = 0\nhasil = 1\nwhile (hasil &lt; 1000):\n  hasil = hasil * 2\n  n = n + 1\nprint(n)\nprint(hasil)\n\n10\n1024\n\n\n\nprint(2**10)\n\n1024"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#list",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#list",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "List",
    "text": "List\n\nbuah = [\"apel\", \"jeruk\", \"pisang\"]\n\n\nprint(buah[0])\n\napel\n\n\n\nprint(buah[1])\n\njeruk\n\n\n\nprint(buah[2])\n\npisang\n\n\n\nprint(len(buah))\n\n3\n\n\n\nfor x in buah:\n  print(\"Saya suka \" + x)\n\nSaya suka apel\nSaya suka jeruk\nSaya suka anggur\n\n\n\nprint(buah)\n\n['apel', 'jeruk', 'pisang']\n\n\n\nbuah[2] = \"anggur\"\n\n\nprint(buah)\n\n['apel', 'jeruk', 'anggur']"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#fungsi",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#fungsi",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Fungsi",
    "text": "Fungsi\nBuatlah fungsi jumlahkan yang menerima input n lalu menghitung\n\\[1 + 2 + 3 + \\dots + n = \\text{ ?}\\]\n\ndef jumlahkan(n):\n  hasil = 0\n  for i in range(1, n+1):\n    hasil = hasil + i\n  return hasil\n\n\nprint(jumlahkan(3))\n\n6\n\n\n\nprint(jumlahkan(100))\n\n5050"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#fungsi-rekursif",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi2_kunjaw.html#fungsi-rekursif",
    "title": "Sesi 2: Praktikum Algoritma Pemrograman",
    "section": "Fungsi Rekursif",
    "text": "Fungsi Rekursif\nBarisan Fibonacci: 0, 1, 1, 2, 3, 5, 8, …\n\\[F_0 = 0, \\quad F_1 = 1\\]\n\\[F_n = F_{n-1} + F_{n-2}\\]\n\ndef fib(n):\n  if (n == 0):\n    return 0\n  elif (n == 1):\n    return 1\n  else:\n    return fib(n-1) + fib(n-2)\n\n\\[F_{10} = \\text{ ?}\\]\n\nfib(10)\n\n55\n\n\nFaktorial:\n\\[0! = 1\\]\n\\[n! = n * (n-1)!\\]\nContoh:\n\\[\\begin{align*}\n5! &= 5 * 4! \\\\\n&= 5 * 4 * 3! \\\\\n&= 5 * 4 * 3 * 2! \\\\\n&= 5 * 4 * 3 * 2 * 1! \\\\\n&= 5 * 4 * 3 * 2 * 1 * 0! \\\\\n&= 5 * 4 * 3 * 2 * 1 * 1 \\\\\n&= 120\n\\end{align*}\\]\n\ndef fact(n):\n  if (n == 0):\n    return 1\n  else:\n    return n * fact(n-1)\n\n\\[10! = \\text{ ?}\\]\n\nfact(10)"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#recap-apa-yang-sudah-dibahas",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#recap-apa-yang-sudah-dibahas",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Recap apa yang sudah dibahas",
    "text": "Recap apa yang sudah dibahas\nTerima kasih banyak sudah mengikuti (preview) Praktikum Kalkulus di Departemen Matematika FMIPA UI, sebagai bagian dari rangkaian acara MIPA Open House tahun 2024, ya!\nHalaman modul praktikum ini lebih detail daripada apa yang sempat kita bahas tadi siang. Apabila misalnya kalian hanya ingin melihat apa yang sempat kita bahas, silakan lompat ke bagian Recap di halaman paling bawah.\nTentunya, kalian juga bisa belajar lebih lanjut tentang Wolfram Mathematica dari sumber-sumber yang ada di internet, misalnya dokumentasi resmi Wolfram Mathematica: https://reference.wolfram.com/language/index.html.en\nSemangat dan selamat belajar!"
  },
  {
    "objectID": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#fungsi-dan-plot",
    "href": "semuahalaman/modulprak/2024/ganjil/mipa_open_house/sesi1.html#fungsi-dan-plot",
    "title": "Sesi 1: Praktikum Kalkulus",
    "section": "Fungsi dan Plot",
    "text": "Fungsi dan Plot\nSelain N dan Clear, Wolfram Mathematica menyediakan fungsi trigonometri seperti Sin dan Cos\n\n?Sin\n\n\n\n\n\nSin[0]\n\n0\n\n\n\nSin[Pi/4]\n\n\n\n\n\nCos[Pi/4]\n\n\n\n\nKita juga bisa mendefinisikan fungsi sendiri.\nUntuk mendefinisikan sebuah fungsi di Wolfram Mathematica, Anda perlu:\n\nMemberikan nama untuk fungsi tersebut. Pastikan bahwa nama fungsi yang Anda gunakan belum pernah digunakan di Wolfram Mathematica. Indikasi nama fungsi yang belum pernah digunakan adalah dari warnanya yang biru. Jika nama fungsi yang Anda berikan berwarna hitam, maka Anda diimbau untuk menggunakan nama lain karena tandanya nama tersebut sudah digunakan oleh Wolfram Mathematica.\nMenggunakan simbol kurung siku “[ ]” untuk menampung input atau parameter-parameter fungsinya.\nMemberikan simbol underscore “_” di akhir setiap parameter fungsi.\nJika terdapat lebih dari satu parameter, maka pisahkan parameter yang berbeda dengan simbol koma “,”.\nMenggunakan simbol titik dua sama dengan “:=” untuk mendefinisikan fungsinya.\n\nContoh fungsi yang didefinisikan dengan baik di Wolfram Mathematica adalah sebagai berikut.\n\nf[x_] = x^2 + 2 x + 1\n\n\n\n\nDengan didefinisikannya fungsi f[x] di atas, Anda dapat memanggil kembali fungsi tersebut dengan mengetik seperti ini.\n\nf[x_]\n\n\n\n\nSelain itu, Anda dapat mengevaluasi fungsi f[x] untuk nilai x tertentu.\n\nf[2]\n\n9\n\n\nSelain fungsi satu variabel (parameter), Anda juga dapat mendefinisikan sebuah fungsi dengan lebih dari satu variabel (parameter) dengan aturan yang sama.\n\ng[x_, y_] := x^2 + y^2 + 1\n\n\ng[x,y]\n\n\n\n\n\ng[5,8]\n\n90\n\n\nFungsi built-in Wolfram Mathematica yang dapat Anda gunakan untuk menggambar grafik fungsi adalah fungsi Plot\n\n?Plot\n\n\n\n\nBerdasarkan deskripsi fungsi Plot di atas, terdapat banyak versi syntax yang dapat digunakan untuk menggambar grafik fungsi sesuai dengan kebutuhan Anda.\nBentuk syntax yang paling sederhana adalah Plot[f[x], {x, a, b}] dengan\n\nf[x] menyatakan fungsi yang ingin digambar,\na menyatakan batas awal grafik, dan\nb menyatakan batas akhir grafik\n\n\nPlot[x^2, {x, -5, 5}]\n\nSystemModelPlot::shdw: Symbol SystemModelPlot appears in multiple contexts {System`, Global`}; definitions in context System` may shadow or be shadowed by other definitions.\n\n\n\n\n\nSelain menuliskan formula dari fungsinya secara manual, Anda juga bisa memberikan nama fungsi beserta variabelnya saja. Tentu, hal ini hanya bisa dilakukan jika sebelumnya fungsi tersebut sudah terdefinisi.\n\nPlot[f[x], {x, -5, 5}]\n\n\n\n\n\nPlot[Sin[x], {x, -5, 5}]\n\n\n\n\nKemudian, fungsi Plot juga bisa digunakan untuk menggambar lebih dari satu grafik fungsi di tempat yang sama. Jika terdapat lebih dari satu fungsi yang ingin digambar grafiknya, Anda perlu mengumpulkan fungsi-fungsi tersebut di dalam simbol kurung kurawal “{ }”.\n\nPlot[{f[x], Sin[x] Cos[x]}, {x, -5, 5}]"
  }
]