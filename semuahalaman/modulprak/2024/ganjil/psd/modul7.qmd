---
title: "(Pertemuan 07) Distribusi Sampling di R"
subtitle: "Sampling Distributions in R"
description: "Offline di Departemen Matematika"
date: 11/04/2024
page-navigation: true
format: html
---

Kembali ke [Pengantar Sains Data](./psd2024.qmd)

Distribusi dari suatu statistik disebut ***sampling distribution*** atau **distribusi *sampling***.

Contoh: distribusi dari rata-rata disebut distribusi *sample mean*. (Rata-rata termasuk statistik)

# Distribusi *Sample Mean*

## Dengan melakukan simulasi

Misalkan kita punya suatu distribusi *uniform* (kontinu)

Akan dilakukan *sampling* dari distribusi tersebut

```{r}
unif1 <- c(1:8)
unif1
```

Lihat sebarannya

```{r}
mean(unif1)
```

```{r}
sd(unif1)
```

```{r}
hist(unif1, main = "Uniform Distribution", xlab = " ")
```

Misal diambil berbagai ukuran sampel dengan pengembalian

```{r}
set.seed(211)
```

Sample size 3, 1000 kali percobaan

```{r}
sample_means <- c( )
for(i in 1:1000){
  sample_means[i] <- mean(sample(8, 3, replace = T))
}
hist(sample_means, xlim = c(0,8), main = "Sample Size of 3", xlab = "Sample Means")
```

Sample size 10, 1000 kali percobaan

```{r}
sample_means <- c( )
for(i in 1:1000){
  sample_means[i] <- mean(sample(8, 10, replace = T))
}
hist(sample_means, xlim = c(0,8), main = "Sample Size of 10", xlab = "Sample Means")
```

Sample size 50, 1000 kali percobaan

```{r}
sample_means <- c( )
for(i in 1:1000){
  sample_means[i] <- mean(sample(8, 50, replace = TRUE))
}
hist(sample_means, xlim = c(0,8), main = "Sample Size of 50", xlab = "Sample Means")
```

Jika dilihat berdasarkan histogram dari ketiga sampling tadi, bisa terlihat bahwa semakin besar ukuran sampelnya, maka distribusi *sample mean* akan semakin mendekati distribusi normal

## Dengan melihat semua kemungkinan

Daripada melakukan simualsi yang mengandalkan *random*, untuk ukuran sampel yang cukup kecil, kita bisa saja melihat semua kemungkinan pengambilan sampel, menghitung statistiknya (misalnya di sini statistik rata-rata), lalu mmenghitung probabilitasnya, untuk memperoleh distribusi *sampling* untuk statistik tersebut (misalnya di sini distribusi *sample mean*) secara eksak.

Mari kita coba untuk distribusi diskrit berhingga, yang misalnya bisa kita buat sendiri, memanfaatkan  *package* `distr` yang sudah kita kenal sebelumnya.

```{r}
library("distr")
```

Kita akan meninjau semua kemungkinan pengambilan dua sampel dengan pengembalian. Untuk itu, kita memerlukan *package* `gtools` yang menyediakan fungsi-fungsi kombinatorik seperti `permutations` dan `combinations` untuk memperoleh semua kemungkinan seperti itu

```
install.packages("gtools")
```

```{r}
library("gtools")
```

Misalkan kita punya distribusi diskrit sebagai berikut:

```{r}
supp1 <- c(0, 1, 2, 3)
prob1 <- c(1/4, 1/4, 1/4, 1/4)
dist1 <- DiscreteDistribution(supp = supp1,
                              prob = prob1)
plot(dist1)
```

(Sebenarnya `dist1` juga bisa berupa distribusi Bernoulli, binomial, ataupun distribusi diskrit lainnya.)

Kita bisa menghasilkan semua kemungkinan sampel berukuran 2 dengan pengembalian, menggunakan fungsi `permutations` dari *package* `gtools`, sebagai berikut:

```{r}
mat1 <- permutations(n = length(support(dist1)),
                     r = 2, # ukuran sampel
                     v = support(dist1),
                     repeats.allowed = TRUE)
mat1
```

Hasilnya berupa matriks, yang bisa kita ubah jadi *data frame*,

```{r}
df_perm1 <- data.frame(mat1)
df_perm1
```

Kemudian, kita ingin menghitung rata-rata dari tiap kemungkinan dua sampel. Kita bisa *apply* atau menerapkan fungsi statistik yang kita inginkan, misalnya `mean` atau rata-rata, untuk tiap baris di matriks `mat1`, sebagai berikut

```{r}
apply(mat1, 1, mean)
```

Hasilnya bisa kita simpan sebagai kolom baru di *data frame*, misal kolom `Xbar`

```{r}
df_perm1["Xbar"] <- apply(mat1, 1, mean)
df_perm1
```

Sekarang, `df_perm1` menyimpan semua kemungkinan sampel berukuran 2 dengan pengembalian yang mungkin, disertai rata-rata masing-masing.

Selanjutnya, kita perlu menghitung probabilitas dari tiap kemungkinan sampel. Perhatikan bahwa, karena *sampling* dilakukan **dengan pengembalian**, probabilitas antar tiap pengambilan bersifat **independen**. Sehingga, kita tinggal mengalikan probabilitas untuk masing-masing pengambilan.

Caranya, kita bisa menghitung probabilitas masing-masing pengambilan (membuat matriks baru, misal `mat1_prob`), baru melakukan perkalian per baris.

Karena distribusi `dist1` tergolong diskrit, kita bisa menerapkan PMFnya yaitu fungsi `d`

```{r}
d(dist1)(mat1)
```

Waduh, hasilnya malah *flat*, daripada berbentuk matriks. Agar tetap berbentuk matriks, kita gunakan fungsi `apply` lagi, sebagai berikut

```{r}
mat1_prob <- apply(mat1, 1:2, d(dist1))
mat1_prob
```

Sekarang kita tinggal mengalikan tiap baris (dengan `apply` lagi), dan menyimpan hasilnya sebagai kolom baru di *data frame*, misal `prob`

```{r}
df_perm1["prob"] <- apply(mat1_prob, 1, prod)
df_perm1
```

Kini, tiap kemungkinan sampel berukuran 2 dengan pengembalian sudah disertai rata-rata dan probabilitas. Untuk memperoleh tabel (PMF untuk) distribusi *sample mean*, kita tinggal melakukan "pengelompokkan" data untuk tiap nilai statistiknya yaitu `Xbar` atau rata-rata, sembari menjumlahkan probabilitas. Caranya bisa dengan kode seperti berikut

```{r}
Xbar_prob1 <- aggregate(prob ~ Xbar,
                        data = df_perm1,
                        sum)
Xbar_prob1
```

`Xbar_prob1` adalah tabel PMF dari *sample mean*, yang telah diperoleh secara eksak. Mari kita visualisasikan distribusi *sample mean* tersebut menggunakan *histogram*, tetapi dengan fungsi `barplot` agar tiap nilai rata-rata memiliki bar tersendiri

```{r}
barplot(height = Xbar_prob1[["prob"]],
        names.arg = Xbar_prob1[["Xbar"]],
        ylim = c(0, 5/16),
        yaxp = c(0, 5/16, 5))
```

Whew! Perhatikan bahwa, untuk sampel berukuran 2, ternyata kemungkinannya cukup banyak. Lihat kembali dimensi dari `mat1` yaitu matriks berisi semua kemungkinan sampel berukuran 2 dengan pengembalian:

```{r}
dim(mat1)
```

Banyaknya baris bisa sampai 16 ini dihasilkan dari rumus banyaknya permutasi dengan pengulangan *(permutations with repition)*, yaitu

$$n^r = 4^2 = 16$$

```{r}
4^2
```

Dengan 4 adalah ukuran *support* di distribusi asalnya, dan 2 adalah ukuran sampel. Ini masih contoh kecil.

Bayangkan apabila ukuran sampelnya besar. Maka banyaknya kemungkinan pengambilan menjadi amat sangat banyak. Terlalu banyak, sehingga lebih baik kita lakukan suatu penghampiran daripada langsung menghitung distribusi *sample mean* secara eksak.

Untuk itu, perhatikan dalil-dalil berikut.

## Dalil 1 - Dengan Pengembalian

**Dalil 1**

Apabila sampel acak berukuran n diambil **dengan pengembalian** dari populasi berhingga yang berukuran $N$, dimana populasi tersebut mempunyai mean $\mu$ dan variansi $\sigma^2$ , maka untuk $n$ yang besar, distribusi dari mean sampel $\bar{X}$ akan mendekati distribusi normal dengan mean $\mu_\bar{X} = \mu$ dan $\sigma\bar{X}^2 = \frac{\sigma^2}{n}$. Dengan demikian $$Z = \frac{\bar{X} - \mu}{\frac{\sigma}{\sqrt{n}}} \; \text{mendekati} \; N(0,1)$$

Catatan: Dalil 1 berlaku untuk populasi berhingga dengan **ukuran sampel** $\mathbf{n \geq 30}$. Dalil 1 berlaku untuk $n < 30$ apabila distribusi dari populasinya tidak terlalu menyimpang dari distribusi normal.

**Contoh**

Misalkan diberikan populasi 1,1,1,3,4,5,6,6,6,7 dan misalkan diambil sampel acak berukuran 36 dari populasi tersebut dengan pengembalian. Tentukan probabilitas bahwa nilai rata-rata sampelnya antara 3.85 dan 4.45 !

```{r}
data1 <- c(1, 1, 1, 3, 4, 5, 6, 6, 6, 7,8,8)
```

Kita hitung statistiknya

```{r}
mean1 <- mean(data1)
sd1 <- sd(data1)
```

Sekarang kita hitung probabilitasnya

```{r}
n <- 36
probability <-
  pnorm(4.45,
        mean = mean1,
        sd = sd1/sqrt(n)) -
    pnorm(3.85,
          mean = mean1,
          sd = sd1/sqrt(n))
probability
```

Atau bisa kita ubah ke normal standar terlebih dahulu

```{r}
n <- 36
standard_error <- sd1 / sqrt(n)
lower_bound <- 3.85
upper_bound <- 4.45
z_lower <- (lower_bound - mean1) / standard_error
z_upper <- (upper_bound - mean1) / standard_error
probability <- pnorm(z_upper) - pnorm(z_lower)
probability
```

## Dalil 2 - Tanpa Pengembalian

**Lalu bagaimana dengan tanpa pengembalian?** Misalkan kita punya suatu distribusi uniform

```{r}
unif2 <- c(1:50)
unif2
```

Lihat sebarannya

```{r}
mean(unif2)
```

```{r}
sd(unif2)
```

```{r}
hist(unif2, main = "Uniform Distribution", xlab = " ")
```

Sample size 30, 1000 kali percobaan

```{r}
sample_means <- c( )
for(i in 1:1000){
  sample_means[i] <- mean(sample(50, 30, replace = FALSE))
}
hist(sample_means, main = "Sample Size of 50", xlab = "Sample Means")
```

Dapat terlihat juga bahwa bentuk distribusinya mirip dengan distribusi normal! Akan tetapi, formula yang digunakannya berbeda, ingat dalil 2!

**Dalil 2** Apabila sampel acak berukuran n diambil secara acak **tanpa pengembalian** dari suatu populasi berhingga berukuran $N$, dimana populasi tersebut memiliki mean $\mu$ dan variansi $\sigma^2$, maka distribusi probabilitas $\bar{X}$ akan menghampiri normal dengan $\mu_\bar{X} = \mu$ dan $\sigma^2 = \frac{\sigma^2(N-n)}{n(N-1)}$

Catatan: lagi-lagi, ada syarat $n \geq 30$

Secara umum, jika sampel yang diambil sangat besar (yaitu $n \geq 30$) maka bisa digunakan **CLT** atau ***Central Limit Theorem***, juga disebut **Dalil Limit Pusat**

# *Central Limit Theorem* (CLT)

Semakin besar sampel yang diambil, distribusi *sample mean* makin mendekati distribusi normal $N(\mu, \sigma^2)$, dengan

$$\mu_\bar{X} \approx \mu$$

$$\sigma_\bar{X}^2 \approx \frac{\sigma^2}{n}$$

Bagaimanapun bentuk distribusi aslinya, apabila $n \geq 30$, distribusi normal di atas akan mendekati distribusi *sample mean* dengan sangat baik

## Contoh CLT: Menghitung CDF

Sebuah perusahaan memproduksi bohlam. Bila umur bohlam itu menyebar normal dengan mean 800 jam dan standar deviasi 40 jam, hitunglah peluang bahwa suatu sampel acak 16 bohlam akan mempunyai umur rata-rata kurang dari 775 jam.

Jawab: misalkan $X$ adalah variabel acak untuk umur bohlam. Diminta

$$\text{Pr}(X < 775)$$

yaitu nilai CDF di 775.

```{r}
n <- 16
mean2 <- 800
sd2 <- 40 / sqrt(n)
pnorm(775, mean = mean2, sd = sd2)
```

Atau jika ingin diubah ke dalam normal standar terlebih dahulu,

```{r}
x = (775-mean2) / sd2
pnorm(x) # otomatis mean=0, sd=1
```

## CLT untuk sembarang data

transformasi data random menjadi normal standar (berlaku untuk distribusi kontinu apapun -\> sampling dist.) gunakan CLT -\> scale

```{r}
set.seed(101)
n <- 100
random <- rnorm(n, mean = 10, sd = 8)
par(mfrow = c(1,2))
plot(density(random), main = "Sebelum")
plot(density(scale(random)), main = "Sesudah")
```

## Contoh CLT: Probabilitas di Interval

Misalkan diberikan populasi 1,1,1,3,4,5,6,6,6,7 dan misalkan diambil sampel acak berukuran 36 dari populasi tersebut dengan pengembalian. Tentukan probabilitas bahwa nilai rata-rata sampelnya antara 3.85 dan 4.45 !

```{r}
data1 <- c(1, 1, 1, 3, 4, 5, 6, 6, 6, 7)

mean1 <- mean(data1)
sd1 <- sd(data1)

n <- 36
standard_error <- sd1 / sqrt(n)

lower_bound <- 3.85
upper_bound <- 4.45
z_lower <- (lower_bound - mean1) / standard_error
z_upper <- (upper_bound - mean1) / standard_error

probability <- pnorm(z_upper) - pnorm(z_lower)
probability
```

# Distribusi-t

Digunakan saat $n < 30$ (sehingga tidak bisa menggunakan CLT) dan variansi tidak diketahui

## PDF

```{r}
dt(x = 0.5, df = 14)
```

## CDF

```{r}
pt(0.025, df = 14) 
```

## *Quantile function*

Pr(T\<t)=0.05 (alpha) -\> nyari t nya (t-table)

```{r}
qt(.95, df = 20)
```

## RNG

```{r}
set.seed(121)
n <- 100
randomt <- rt(n, df = 20)

hist(randomt, breaks=50, xlim = c(-6, 4))
```

## Penerapan distribusi-t

**Contoh**

Tentukan nilai $k$ sedemikian sehingga

$$\text{Pr}(k < T < -1.761) = 0.045$$

dari suatu sampel acak berukuran 15 diambil dari suatu populasi normal

```{r}
prob <- 0.045
atas <- pt(-1.716, df = 15)

bawah <- atas - prob
k <- qt(bawah, df = 15)
k
```

# Distribusi beda dua *mean*
