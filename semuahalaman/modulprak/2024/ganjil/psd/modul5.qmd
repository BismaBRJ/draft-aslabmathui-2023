---
title: "(Pertemuan 05) R: Distribusi Probabilitas Diskrit"
subtitle: "R: Discrete Probability Distributions"
description: "Offline di Departemen Matematika"
date: 10/21/2024
page-navigation: true
format: html
---

Kembali ke [Pengantar Sains Data](./psd2024.qmd)

Selamat datang kembali di praktikum Pengantar Sains Data. Setelah sebelumnya membahas tentang serba-serbi visualisasi data, sekarang kita akan mulai membahas sejumlah bentuk distribusi probabilitas yang umum dikenal dan digunakan di dunia statistika, dimulai dari sejumlah distribusi diskrit.

Dalam suatu percobaan acak, tentu ada sejumlah hasil yang mungkin. Kita bisa memandang hasil-hasil yang mungkin tersebut sebagai nilai-nilai yang bisa dimiliki oleh suatu **variabel acek *(random variable)***, biasanya dilambangkan $X$. Himpunan semua nilai yang mungkin disebut **ruang sampel *(sample space)*** untuk variabel acak tersebut.

**Distribusi probabilitas *(probability distribution)*** untuk suatu variabel acak mendata probabilitas atau peluang untuk tiap nilai di ruang sampel.

Suatu ruang sampel disebut **diskrit** apabila banyaknya elemen bersifat **terhitung *(countable)***. Suatu distribusi disebut **diskrit** apabila variabel acak yang bersangkutan memiliki ruang sampel yang diskrit.

Serupa: suatu ruang sampel disebut **kontinu** apabila banyaknya elemen bersifat **tak terhitung *(uncountable)***, dan suatu distribusi disebut **kontinu** apabila variabel acak yang bersangkutan memiliki ruang sampel yang kontinu.

Banyak distribusi data cenderung mengikuti "jenis" atau "bentuk" yang sama, hanya berbeda dari segi beberapa "sifat" saja. Dari situlah muncul berbagai nama distribusi seperti binomial, *uniform*, Poisson, normal, dan seterusnya; itulah sejumlah "bentuk" distribusi yang umum dikenal, dan ada konsep "parameter" sebagai "sifat-sifat" yang bisa membedakan antar dua distribusi yang berbentuk mirip.

Beberapa distribusi diskrit adalah

- distribusi Bernoulli

- distribusi binomial

- distribusi *uniform* diskrit

- distribusi Poisson

# Distribusi Diskrit dengan *base R*

## Fungsi `d`..., `p`..., `q`..., dan `r`...

Di kalangan R, sudah ada semacam standardisasi agar tiap distribusi (baik diskrit maupun kontinu) diwakili oleh empat fungsi, yang namanya berawalan `d`, berawalan `p`, berawalan `q`, dan berawalan `r`.

- Fungsi berawalan `d` melambangkan ***density function***, juga disebut PMF *(probability mass function)* untuk distribusi diskrit, atau PDF *(probability density function)* untuk distribusi kontinu

    Fungsi ini menghitung probabilitas suatu variabel acak $X$ memperoleh nilai **sama dengan** $x$, yang bisa dirumuskan:

    $$\text{Pr}\left\{ X=x \right\}$$

- Fungsi berawalan `p` melambangkan ***(cumulative) probability function*** atau lebih umum disebut **CDF *(cumulative distribution function)***

    Fungsi ini menghitung probabilitas suatu variabel acak $X$ memperoleh nilai **kurang dari atau sama dengan** $x$, yang bisa dirumuskan:

    $$\text{Pr}\left\{ X \leq x \right\}$$

- Fungsi berawalan `q` melambangkan ***quantile function*** atau lebih umum disebut ***inverse CDF***

    Diketahui suatu probabilitas $y$, fungsi ini menentukan nilai $x$ yang membuat nilai CDF dari $x$ sama dengan $y$.

- Fungsi berawalan `r` melambangkan **RNG *(random number generator)***, yang bisa menghasilkan sampel sejumlah data secara acak *(random)* dari distribusinya.

Untuk sejumlah distribusi yang umum dikenal, *base R* sudah menyediakan keempat fungsi tersebut. Kita akan lebih mengenal arti, maksud, dan cara menggunakan fungsi-fungsi tersebut seiring mengenal berbagai distribusi.

## Distribusi Bernoulli

Khusus untuk distribusi Bernoulli, diperlukan *package* `Rlab`

```{r}
library(Rlab)
```

### PMF

```{r}
dbern(0, prob = 0.3)
dbern(1, prob = 0.3)
```

```{r}
support_bern <- c(0, 1)
plot(dbern(support_bern, prob = 0.3))
```

```{r}
plot(support_bern,
     dbern(support_bern, prob = 0.3),
     main = "PMF Distribusi Bernoulli dengan p = 0.3",
     xlab = "x",
     ylab = "f(x)",
     ylim = c(0, 1),
     pch = 20,
     cex = 2)
```

### CDF

```{r}
pbern(0, prob = 0.3)
pbern(1, prob = 0.3)
```

```{r}
plot(support_bern,
     pbern(support_bern, prob = 0.3),
     pch = 20,
     cex = 2,
     xaxp = c(0,10,10))
```

### *Quantile function*

```{r}
qbern(0.5, prob = 0.3)
qbern(0.6, prob = 0.3)
qbern(0.7, prob = 0.3)
qbern(0.8, prob = 0.3)
qbern(0.9, prob = 0.3)
qbern(1, prob = 0.3)
```

### RNG

Bangkitkan n data dari distribusi Bernoulli

```{r}
set.seed(122)
n <- 100
random_bern <- rbern(n, prob = 0.6)
```

```{r}
table(random_bern)/sum(table(random_bern))
```

```{r}
random_bern_plot <- barplot(table(random_bern),
                            ylim = c(0,100))
text(x = random_bern_plot,
     y = table(random_bern),
     labels = table(random_bern),
     pos = 3)
```

## Distribusi Binomial

### PMF

```{r}
dbinom(2,
       size = 10,
       prob = 0.3) #artinya adalah Pr(X=2) dengan X ~ binom(10, 0.3)
```

```{r}
support_binom <- seq(0, 1, by = 10)
```

```{r}
plot(support_binom,
     dbinom(support_binom, 10, 0.3),
     xaxp = c(0,10,10),
     pch = 20,
     ylim = c(0, 1))
```

### CDF

```{r}
pbinom(2, size = 10, prob = 0.3)
```

```{r}
plot(support_binom,
     pbinom(support_binom, 10, 0.3),
     xaxp = c(0,10,10),
     pch = 20,
     ylim = c(0, 1))
```

### *Quantile function*

```{r}
qbinom(0.5, 10, 0.3)
qbinom(0.6, 10, 0.3)
qbinom(0.7, 10, 0.3)
qbinom(0.8, 10, 0.3)
qbinom(0.9, 10, 0.3)
qbinom(1, 10, 0.3)
```

### RNG

Bangkitkan n data dari distribusi Binomial

```{r}
set.seed(122)
n <- 100
random_binom <- rbinom(n, size = 10, prob = 0.3)
```

```{r}
random_binom_plot <- barplot(table(random_binom),
                             ylim = c(0,40))
text(x = random_binom_plot,
     y = table(random_binom),
     labels = table(random_binom),
     pos = 3)
```

## Contoh distribusi binomial

Suatu ujian yang terdiri dari 15 pertanyaan pilihan berganda, masing-masing memiliki 5 kemungkinan jawaban dan hanya satu yang benar. Hitunglah berapa probabilitas seseorang yang menjawab secara menebak-nebak akan memperoleh

a. 5 sampai 10 jawaban yang benar

b. Antara 5 sampai 10 jawaban yang benar

c. 4 jawaban yang benar

d. Lebih dari 5 jawaban yang benar

Jawab

Variabel acak $X$ menyatakan banyaknya jawaban yang benar.

Perhatikan bahwa $X$ berdistribusi binomial dengan $n=15$ dan $p=\frac{1}{5}=0.2$

a. 5 sampai 10 jawaban yang benar

Artinya $\text{Pr}(5 \leq X \leq 10)$

Perhatikan bahwa

$$\text{Pr}(5 \leq X \leq 10) = \text{Pr}(X \leq 10) - \text{Pr}(X \leq 4)$$

Sehingga kita tinggal menghitung nilai CDF di 10 dan di 4, lalu menghitung selisihnya.

```{r}
pbinom(10, size = 15, prob = 0.2) - pbinom(4, size = 15, prob = 0.2)
```

b. Antara 5 sampai 10 jawaban yang benar

Artinya $\text{Pr}(5 < X < 10)$

Perhatikan bahwa

$$\text{Pr}(5 < X < 10) = \text{Pr}(X \leq 9) - \text{Pr}(X \leq 5)$$

Sehingga kita tinggal menghitung nilai CDF di 9 dan di 5, lalu menghitung selisihnya.

```{r}
pbinom(9, size = 15, prob = 0.2) - pbinom(5, size = 15, prob = 0.2)
```

c. 4 jawaban yang benar

Artinya $\text{Pr}(X=4)$

Tinggal hitung PMF di 4

```{r}
dbinom(4, size = 15, prob = 0.2)
```

d. Lebih dari 5 jawaban yang benar

Artinya $\text{Pr}(X>5)$

Perhatikan bahwa

$$\text{Pr}(X>5) = 1 - \text{Pr}(X \leq 5)$$

Sehingga kita tinggal menghitung

```{r}
1 - pbinom(5, size = 15, prob = 0.2)
```

## Distribusi Poisson

### PMF

```{r}
dpois(1, lambda = 2)
dpois(2, lambda = 2)
dpois(3, lambda = 2)
dpois(4, lambda = 2)
dpois(5, lambda = 2)
```

```{r}
support_pois <- seq(0, 10, by = 1)
```

```{r}
plot(support_pois,
     dpois(support_pois, lambda = 2),
     xaxp = c(0,10,10),
     pch = 20,
     ylim = c(0, 1))
```

### CDF

```{r}
ppois(1, lambda = 2)
ppois(2, lambda = 2)
ppois(3, lambda = 2)
ppois(4, lambda = 2)
ppois(5, lambda = 2)
```

```{r}
plot(support_pois,
     ppois(support_pois, lambda = 2),
     xaxp = c(0,10,10),
     pch = 20,
     ylim = c(0, 1))
```

### *Quantile function*

```{r}
qpois(1, lambda = 2)
qpois(2, lambda = 2)
qpois(3, lambda = 2)
qpois(4, lambda = 2)
qpois(5, lambda = 2)
```

### RNG

```{r}
set.seed(122)
n <- 100
random_pois <- rpois(n, lambda = 2)
```

```{r}
random_pois_plot <- barplot(table(random_pois),
                            ylim = c(0,40))
text(x = random_pois_plot,
     y = table(random_pois),
     labels = table(random_pois),
     pos = 3)
```

# (Pengayaan) Visualisasi Distribusi Diskrit dengan ggplot2

# Distribusi Diskrit dengan `distr`

Ada suatu *package* bernama `distr` yang menawarkan pendekatan agak berbeda daripada *base R* dalam hal distribusi. Daripada fungsi-fungsi terpisah untuk tiap kemungkinan **awalan** `d`..., `p`..., `q`..., dan `r`... sebagaimana di *base R*, kita malah bisa membuat suatu "benda" atau "objek" distribusi, yang kemudian bisa diterapkan keempat fungsi **satu huruf** berikut: `d`, `p`, `q`, dan `r`.

Bahkan, dengan pendekatan ini, kita bisa dengan cukup mudah membuat distribusi kita sendiri.

Seperti biasa, silakan instal terlebih dahulu *package* `distr` apabila belum,

```
install.packages("distr")
```

kemudian jangan lupa aktifkan:

```{r}
library("distr")
```

## Membuat distribusi diskrit sendiri

```{r}
supp1 <- c(1, 2, 3)
prob1 <- c(0.3, 0.4, 0.3)
dist1 <- DiscreteDistribution(supp = supp1, prob = prob1)
```

```{r}
plot(dist1)
```

```{r}
d(dist1)(1)
d(dist1)(2)
d(dist1)(3)
```

```{r}
p(dist1)(1)
p(dist1)(2)
p(dist1)(3)
```

```{r}
q(dist1)(0.6)
q(dist1)(0.7)
q(dist1)(0.8)
q(dist1)(0.9)
q(dist1)(1)
```

```{r}
set.seed(122)
n <- 100
random_dist1 <- r(dist1)(n)
```

```{r}
random_dist1_plot <- barplot(table(random_dist1),
                             ylim = c(0,40))
text(x = random_dist1_plot,
     y = table(random_dist1),
     labels = table(random_dist1),
     pos = 3)
```

## Ekspektasi dan Variansi

```
E(dist1)
```

```
var(dist1)
```

```{r}
supp2 <- c(0, 1, 2, 3, 4)
prob2 <- c(0.2, 0.1, 0.3, 0.3, 0.1)
dist2 <- DiscreteDistribution(supp = supp2, prob = prob2)
```

```{r}
plot(dist2)
```

```
E(dist2)
var(dist2)
```

## Distribusi Binomial

```{r}
dist3 <- Binom(size = 15, prob = 0.2)
```

```{r}
plot(dist3)
```

```
E(dist3)
var(dist3)
```

```{r}
d(dist3)(9)
```

```{r}
p(dist3)(9)
```

```{r}
q(dist3)(0.7)
```

```{r}
set.seed(122)
n <- 100
random_dist3 <- r(dist3)(n)
```

```{r}
random_dist3_plot <- barplot(table(random_dist3),
                             ylim = c(0,40))
text(x = random_dist3_plot,
     y = table(random_dist3),
     labels = table(random_dist3),
     pos = 3)
```

## Distribusi Poisson

# (Pengayaan) Distribusi Multinomial
